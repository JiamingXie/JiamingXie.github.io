<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mentality</title>
  
  <subtitle>精诚所至，金石为开</subtitle>
  <link href="/JiamingXie.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/JiamingXie/"/>
  <updated>2018-10-14T11:23:12.865Z</updated>
  <id>https://github.com/JiamingXie/</id>
  
  <author>
    <name>Jiaming Xie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A股弱势下跌后上演V形反弹，创业板带头冲锋</title>
    <link href="https://github.com/JiamingXie/2018/10/14/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0181012/"/>
    <id>https://github.com/JiamingXie/2018/10/14/股市观察日记181012/</id>
    <published>2018-10-14T10:42:57.000Z</published>
    <updated>2018-10-14T11:23:12.865Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7xq584u2j21940j4gr3.jpg" alt=""></p><p>受外盘影响，两市小幅低开，随后在民航板块的带动下，三大指数一度翻红，但此后指数随即回落，两市一度再现杀跌，随后白马股逐渐企稳，指数也随即回升，午后两市延续午前的走势，题材蓝筹稳步走强，创业板一度涨逾1%，上证50则大涨2%，市场在经历了连续的大幅杀跌之后，抄底资金开始逐渐入场，目前市场总体回暖，临近尾盘，横盘震荡。</p><p>截至收盘，沪指收报2606.92点，涨0.91%，成交额1428亿；深成指收报7558.28点，涨0.45%，成交额1661亿；创业板收报1268.41点，涨0.52%，成交额472亿。<br>沪指本周下跌7.6%，创下八个月最大单周跌幅。</p><p>带头冲锋的板块主要是白马蓝筹和高送转。</p><p>主力净流入行业板块前五：银行、电子制造、食品加工、保险、机场<br>主力净流入概念板块前五：次新股、中字头、装配式建筑、互联网保险、超级品牌<br>主力净流入个股前十：格力电器、中国平安、万科A、东方财富、伊利股份、雅运股份、恒瑞医药、平安银行、中国铁建、超频三</p><a id="more"></a><p>龙头股的走势非常典型，不随大盘下跌，分时DDX强势走高，说明资金进入意愿十分强烈。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7yr3pi82j21960oa455.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7ys8p0qvj21980o2n3l.jpg" alt=""></p><p>东财下午的时候横盘了很久，但是完全不虚，因为从买卖档口可以看到有大单一直在10.6吃单。股价一直不破10.58。周一可以高抛低吸，降低成本。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7yu13542j218w0oc44y.jpg" alt=""></p><hr><p>沪指本周哐叽了两次，其实是很大程度受到了外围的影响的。贸易战加码和美联储加息，说对中国没影响是不可能的，很有可能还是长期的影响，比如国产软件、国产芯片公司。这种影响可能会在接下来的几年里体现出来。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7xt0do60j21980jaagk.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw7xq584u2j21940j4gr3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;受外盘影响，两市小幅低开，随后在民航板块的带动下，三大指数一度翻红，但此后指数随即回落，两市一度再现杀跌，随后白马股逐渐企稳，指数也随即回升，午后两市延续午前的走势，题材蓝筹稳步走强，创业板一度涨逾1%，上证50则大涨2%，市场在经历了连续的大幅杀跌之后，抄底资金开始逐渐入场，目前市场总体回暖，临近尾盘，横盘震荡。&lt;/p&gt;
&lt;p&gt;截至收盘，沪指收报2606.92点，涨0.91%，成交额1428亿；深成指收报7558.28点，涨0.45%，成交额1661亿；创业板收报1268.41点，涨0.52%，成交额472亿。&lt;br&gt;沪指本周下跌7.6%，创下八个月最大单周跌幅。&lt;/p&gt;
&lt;p&gt;带头冲锋的板块主要是白马蓝筹和高送转。&lt;/p&gt;
&lt;p&gt;主力净流入行业板块前五：银行、电子制造、食品加工、保险、机场&lt;br&gt;主力净流入概念板块前五：次新股、中字头、装配式建筑、互联网保险、超级品牌&lt;br&gt;主力净流入个股前十：格力电器、中国平安、万科A、东方财富、伊利股份、雅运股份、恒瑞医药、平安银行、中国铁建、超频三&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>受外围影响，千股跌停再现</title>
    <link href="https://github.com/JiamingXie/2018/10/11/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0181011/"/>
    <id>https://github.com/JiamingXie/2018/10/11/股市观察日记181011/</id>
    <published>2018-10-11T11:30:59.000Z</published>
    <updated>2018-10-11T12:41:25.637Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>在连续两天收出星以后，A股开盘低开3.7个点，之后一蹶不振，指数毫无反抗，个股单边下行，市场不足百家个股上涨，市场超3300只个股下跌，午后两市稳步走弱，沪指跌破2600点关口，超1000只个股跌停，仅50只股票上涨，三大股指一度均跌6%，临近尾盘，大盘弱势震荡。<br>截至收盘，沪指收报2583.46点，至近四年新低，跌5.22%，创逾31个月最大单日跌幅，成交额1701亿；深成指收报7524.09点，跌6.07%，成交额1886亿；创业板收报1261.88点，跌6.30%，成交额538亿。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4io38a2nj219g0lu0wl.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4ioeq0crj21980l278n.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4ioly7mlj21960l8q6x.jpg" alt=""></p><a id="more"></a><hr><p>看来之前一直讨论的“熔断底”并不是真正的底部，A股要企稳还有很长的路要走。</p><p>入行几个月，一直受到熊市的摧残，现在已经有了非常强大的内心，一个交易员应该不为情绪所影响，时时刻刻都保持冷静，不因为盈亏影响自己的判断。今天的这种形势，对广大持股股民来说，是一种灾难，但是同时也是一种机会。</p><p>在国庆回来看到暴跌的情况下，就不应加仓了，这样的市场状态并不是可以介入的状态。这几天的暴跌是外围对A股的影响，也是股民对未来的一种预期。美联储加息导致大量资金从股市撤出，企业借贷成本上升，这对经济基本面来说是不向好的，对于股市中的上市公司来说也是不利的。另外美国与墨、加签订明显针对中国的协定，虽然中国现在国力强盛，但是还是有非常多的产品依赖进口，试问如果现在美国断掉我们的芯片供应，我们的电子产业不会受到巨大冲击吗？国产的芯片、软件股是热点，他们是带领反弹呢，还是带头砸盘呢？科技股受到外部的强烈打击，还需要等一等，最终有它们站出来的时候。从夏天观察到现在，科技股的龙头有好几支，用友、浪潮、恒华等等，但是最近都被杀到妈都认不得了，今天更加是好几支跌停，但是也不排除有被错杀的，短线反而是机会。</p><p>大盘一直走弱，在这个过程中基本面好的，不断走强的股票才是好股票，大盘一直砸出最低，但是这些股票都不创新低了，都是具有配置价值的股票。在经济基本面不向好的时候，应该多配置一些刚需的板块，比如<strong>消费和医药</strong>，因为人饿了得吃饭，生病了得吃药。为什么之前消费降级被炒得很热，榨菜股方便面股几个月翻了翻，因为股民的钱都被套了，大家没钱消费啊，拉动GDP要靠什么？要靠消费。有人问现在茅台都这么高了还能买吗？当然能买，茅台是好公司，五粮液也是好公司，只是之前涨太高了，这半年都跟着其他白马一起被杀。医药板块，最近的消息是有好几款抗癌药进了医保，一些龙头公司也有利好，开始研发新药，之后的走势应该会发生分化，强者恒强，所以这类股票就要看准龙头买（恒瑞医药、片仔癀等）。当然有时也要靠基建，基建之前站出来过几次（中国建筑、中国铁建、中国交建），之后什么时候站出来，还是个未知数。还有什么股票可以配置？<strong>三金-保险、银行、券商。</strong>这些板块都是国家队大量持有的权重股，风险比较小。一般情况下都是四大美女-基建、三金、科技股、白马轮流唱戏，市场没有热点的时候几块钱的垃圾股也会炒作一下，没有人会知道明天的热点是什么（不过以后用大数据机器学习一下没准是可以预测出来的），盘感好的大牛可以技术面做短线，但是一般的小散还是以基本面价值投资为主，结合短线高抛低吸降低成本为好。</p><p>长线来看现在很多资金都在布局，包括长线养老金入市的事情现在也落地了。不过就最近的经济局势，现在抄进去抄到的应该不是真正的底，真正的企稳可能要等到明年下半年。如果要配置绩优蓝筹股，那么现在超跌的时候，就是机会。短线不建议介入，长线可以配置资产，至于已经有仓位的，卧倒不动等大盘企稳再上车，之后应该是漫长的磨底过程。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在连续两天收出星以后，A股开盘低开3.7个点，之后一蹶不振，指数毫无反抗，个股单边下行，市场不足百家个股上涨，市场超3300只个股下跌，午后两市稳步走弱，沪指跌破2600点关口，超1000只个股跌停，仅50只股票上涨，三大股指一度均跌6%，临近尾盘，大盘弱势震荡。&lt;br&gt;截至收盘，沪指收报2583.46点，至近四年新低，跌5.22%，创逾31个月最大单日跌幅，成交额1701亿；深成指收报7524.09点，跌6.07%，成交额1886亿；创业板收报1261.88点，跌6.30%，成交额538亿。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4io38a2nj219g0lu0wl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4ioeq0crj21980l278n.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw4ioly7mlj21960l8q6x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Arrays, Methods, Strings, Class</title>
    <link href="https://github.com/JiamingXie/2018/10/10/Arrays,%20Methods,%20Strings,%20Class/"/>
    <id>https://github.com/JiamingXie/2018/10/10/Arrays, Methods, Strings, Class/</id>
    <published>2018-10-10T11:21:41.000Z</published>
    <updated>2018-10-14T08:07:47.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h1><p>Suppose your boss ask you to calculate the average temperature of a week. How can you store seven temperatures? What if you are asked to do for 365 days? What if you are asked to do for 10 years.</p><p>Array is a data structure which stores multiple values of same type.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> [] weeklyTemp;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">int</span> av_temp=(weeklyTemp[<span class="number">0</span>] + weeklyTemp[<span class="number">1</span>]+...)/<span class="number">7</span>;</span><br></pre></td></tr></table></figure><p>You use index to apply the element in the array. </p><p>Index starts from 0.</p><p><code>array_name.legth</code> gives the size of array.</p><a id="more"></a><p>You can also put a size for the array.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> weeklyTemp[];</span><br><span class="line">weeklytemp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">7</span>];</span><br><span class="line">weeklytemp[<span class="number">0</span>] = <span class="number">55</span>;</span><br><span class="line">weeklytemp[<span class="number">1</span>] = <span class="number">54</span>;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> tmp[]=&#123;<span class="number">55</span>,<span class="number">54</span>,<span class="number">56</span>,<span class="number">52</span>,<span class="number">51</span>,<span class="number">53</span>,<span class="number">50</span>&#125;;</span><br><span class="line"><span class="keyword">float</span> av_tmp=(tmp[<span class="number">0</span>]+tmp[<span class="number">1</span>]+tmp[<span class="number">2</span>]+tmp[<span class="number">3</span>]+tmp[<span class="number">4</span>]+tmp[<span class="number">5</span>]+tmp[<span class="number">6</span>])/<span class="number">7</span>;</span><br><span class="line">System.out.printf(<span class="string">"The Average Temperature is: %f"</span>, av_tmp);</span><br></pre></td></tr></table></figure><hr><p><strong>Assigning one array to another actually assigns the references!!</strong></p><p><strong>Essentially both of them are same array!(mapping to the same memory)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> lastweektmp[]=&#123;<span class="number">55</span>,<span class="number">54</span>,<span class="number">56</span>,<span class="number">52</span>,<span class="number">51</span>,<span class="number">53</span>,<span class="number">50</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> thisweektmp[];</span><br><span class="line">thisweektmp=lastweektmp;</span><br></pre></td></tr></table></figure><p>when you change <code>lastweektmp</code>, <code>thisweektmp</code> will also changes; vice versa.</p><hr><p><strong>Use Loop</strong></p><ul><li><p>get the sum of …</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> weeklyTmp[]=&#123;<span class="number">69</span>,<span class="number">70</span>,<span class="number">71</span>,<span class="number">68</span>,<span class="number">66</span>,<span class="number">71</span>,<span class="number">70</span>&#125;;</span><br><span class="line"><span class="keyword">float</span> sum=<span class="number">0.0f</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;weeklyTemp.length;i++)</span><br><span class="line">    sum+=weeklyTemp[i];</span><br></pre></td></tr></table></figure></li><li><p>get the max of…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> maxTemp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;weeklyTemp.length;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(weeklyTemp[i]&gt;maxTemp)</span><br><span class="line">        maxTemp=weeklyTemp[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>get the min of…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> min = weeklyTmp[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> day=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(day=<span class="number">1</span>;day&lt;<span class="number">7</span>;day++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(min&gt;weeklyTmp[day])</span><br><span class="line">        min = weeklyTmp[day];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>Comparing arrays</strong></p><p>Array name is reference. When you compare values (other than built in type) you are comparing the reference.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> weeklyTmp1[]=&#123;<span class="number">69</span>,<span class="number">70</span>,<span class="number">71</span>,<span class="number">68</span>,<span class="number">66</span>,<span class="number">71</span>,<span class="number">70</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> weeklyTmp2[]=&#123;<span class="number">69</span>,<span class="number">70</span>,<span class="number">71</span>,<span class="number">68</span>,<span class="number">66</span>,<span class="number">71</span>,<span class="number">70</span>&#125;;</span><br></pre></td></tr></table></figure><p>But <code>weeklyTmp1=weeklyTmp2</code> is False because they are mapping to different references.</p><h1 id="Character-Strings"><a href="#Character-Strings" class="headerlink" title="Character Strings"></a>Character Strings</h1><h2 id="Characters-in-Java"><a href="#Characters-in-Java" class="headerlink" title="Characters in Java"></a>Characters in Java</h2><ul><li>Printable and nonprintable</li><li>Lowercase letters</li><li>Uppercase letters</li><li>Numbers</li><li>Special characters</li></ul><h2 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h2><ul><li>is a sequence of characters</li><li>not a formal data type into store texts java</li><li>Strings are objects in java</li><li>java provides string class to create and use them</li><li>it is part of every java installation (no import needed)</li><li>the positions in the strings are enumerated starting with <strong>zero</strong></li><li>String literals are represented by double-quoting the content: “Text”.</li></ul><p>String class provides many useful methods:</p><ul><li><p><strong>int length()</strong>  </p><p>return length of string</p></li><li><p><strong>char charAt(int index)</strong> </p><p>returns a char ar index</p></li><li><p><strong>boolean equals(String other)</strong></p></li><li><p><strong>int compareTo(String other)</strong></p><p>Compares this string &amp; other returns</p><p>0 for equal </p><p>neg if less</p><p>otherwise pos</p></li><li><p><strong>String substring(int beginIndex, int endIndex)</strong></p><p>Returns substring</p></li><li><p><strong>String trim()</strong></p><p>Trim out the blank</p></li><li><p><strong>bolean equalsIgnoreCase(String other)</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span> (Character.isDigit(c))</span><br><span class="line">    System.out.printf(<span class="string">"%c is a digit\n"</span>, c);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    System.out.printf(<span class="string">"%c is not a digit\n"</span>, c);</span><br><span class="line"></span><br><span class="line">String myString = <span class="string">"Whatever you want to put here"</span>;</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"The length of the string is: %d\n"</span>, myString.length());</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"The character at %d position is %c\n"</span>,<span class="number">5</span>,myString.charAt(<span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"The index of \"%c\" is at %d position\n"</span>,c,myString.index(c,<span class="number">10</span>));<span class="comment">//find the character "a" after the 10th character</span></span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"The part of string starting from %d to %d is %s\n"</span>,<span class="number">5</span>,<span class="number">10</span>,myString.substring(<span class="number">5</span>,<span class="number">10</span>));</span><br></pre></td></tr></table></figure><hr><p>Unlike arrays, <code>string1=&quot;Hello world!&quot;</code> equals to <code>string2=&quot;Hello world!&quot;</code>. Because they point to the same string.</p><p>so never use <code>string1==string2</code> to test the equality. <strong>Don’t test the equality of <u>reference</u>!! You should test the <u>method</u>!!</strong> <code>string1.equals(string2)</code></p><p>If <code>string1=&quot;hello&quot;</code> and <code>string2=&quot;Hello&quot;</code>, then we can use <code>equalsIgnoreCase()</code>.</p><p>You can also compare the strings lexicographically. The comparison is based on the Unicode value of each character in the strings. The character sequence represented by this<code>String</code> object is compared lexicographically to the character sequence represented by the argument string. The result is a negative integer if this <code>String</code> object lexicographically precedes the argument string. The result is a positive integer if this <code>String</code> object lexicographically follows the argument string. The result is zero if the strings are equal; <code>compareTo</code> returns <code>0</code> exactly when the <code>equals(Object)</code> method would return <code>true</code>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">String string1=<span class="string">"hello"</span>;</span><br><span class="line">String string2=<span class="string">"Hello"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(string1.compareTo(string2)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.print(<span class="string">"String1 is greater."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(string1.compareTo(string2)&lt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.print(<span class="string">"String2 is greater."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    System.out.print(<span class="string">"Both are equal"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h1><p>Class and main will get large:</p><ul><li>unreadable</li><li>Not maintainable</li><li>repeated code</li></ul><p>Method is a snippet of programs working together allows:</p><ul><li>Code re-use</li><li>Team development</li><li>Well structured application</li><li>Easy maintainance</li></ul><p>The methods really define the behavior of an object.</p><p><code>printf()</code>, <code>nextInt()</code> are all methods.</p><p>We can also write our own methods.</p><p>a. Declaration </p><p>b. Define </p><p>c. Use (Invoke)</p><p><strong>General Form</strong></p><p><code>method_type, method_name(argument_list);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">getBracket</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sum</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>float</code> and <code>void</code> are different kinds of methods.</p><p>When you want to call the methods, it is just like when you are using the system methods.</p><p>Before you use the method, you need to <strong>define the method first</strong>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getBracket</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> yourTaxBracket;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>Demo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getTemperatures</span><span class="params">(<span class="keyword">int</span> [] tempArray)</span></span>&#123;</span><br><span class="line">    Scanner getInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">for</span>(day=<span class="number">0</span>;day&lt;tempArray.length;day++)&#123;</span><br><span class="line">        System.out.printf(<span class="string">"Enter the temp: "</span>);</span><br><span class="line">        tempArray[day] = getInput.nextInt();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printTemp</span><span class="params">(<span class="keyword">int</span> [] tempArray)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">for</span> (day=<span class="number">0</span>;day&lt;tempArray.length;day++)</span><br><span class="line">        System.out.printf(<span class="string">"The temperature on day %d was %d\n"</span>,day+<span class="number">1</span>,tempArray[day]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMin</span><span class="params">(<span class="keyword">int</span> [] tempArray)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min=tempArray[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">for</span> (day=<span class="number">1</span>;day&lt;tempArray.length;day++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (min&gt;tempArray[day])</span><br><span class="line">            min = tempArray[day];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> [] tempArray)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">int</span> max=tempArray[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(day=<span class="number">1</span>;day&lt;tempArray.length;day++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (max&lt;tempArray[day])</span><br><span class="line">            max = tempArray[day];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">(<span class="keyword">int</span> [] tempArray)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="keyword">int</span> total = tempArray[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (day=<span class="number">1</span>;day&lt;tempArray.length;day++)</span><br><span class="line">        total +=tempArray[day];</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UseBox</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawHLine</span><span class="params">(<span class="keyword">int</span> hSize; String hstr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i++&lt;h)</span><br><span class="line">            System.out.print(hstr);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawVLine</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> v, String vstr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i++&lt;v-<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.print(vstr);</span><br><span class="line">            <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(j++&lt;h-<span class="number">2</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(vstr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hSize=<span class="number">20</span>;</span><br><span class="line">        <span class="keyword">int</span> vSize=<span class="number">10</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        drawHLine(hSize,<span class="string">"+"</span>);</span><br><span class="line">        System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">        drawVLine(hSize,vSize,<span class="string">"|"</span>);</span><br><span class="line">        drawHLine(hSize,<span class="string">"+"</span>);</span><br><span class="line">        System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Class-and-Objects"><a href="#Class-and-Objects" class="headerlink" title="Class and Objects"></a>Class and Objects</h1><p>Java is a object oriented programming (OOP).</p><p>All real-world object has <strong><em>state and behavior</em></strong>.</p><p>Object’s <strong>state</strong> is stored in <strong><em>fields</em></strong> (variables)</p><ul><li>it could be <strong>primitive data</strong> type or another object</li></ul><p>Object’s <strong>behavior</strong> is defined by <strong><em>methods</em></strong> (functions)</p><ul><li>it operates on <strong>internal state</strong>. Hides details. Providing OOP Encapsulation.</li></ul><p>A dog object can provide: Age and Name as fields to store state and bark, eat, wagthetail methods for behavior.</p><p><strong>Benefits</strong>:</p><p>Independent development: <strong>Modularity</strong></p><p>Internal detail is hidden: <strong>Encapsulation</strong></p><p>Reduce redundancy: Code can be <strong>re-used</strong></p><p>Compartmentalizing: Ease of <strong>maintainability</strong></p><hr><ul><li><p>Class:</p><p>A blue print to create an individual object.</p><p>*Red Honda and blue Honda are built in the same factory. There state and behavior are similar.</p><p>A big BOX or small box is created from same box bue print.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Object:</p><p>A red Honda is an instance(object) of a generic Honda (class)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Honda redHonda = <span class="keyword">new</span> Honda();</span><br><span class="line">Honda blueHonda = <span class="keyword">new</span> Honda();</span><br></pre></td></tr></table></figure><p>The behavior is  similar but different state.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Box bigBox = <span class="keyword">new</span> Box(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line"><span class="comment">//object</span></span><br><span class="line">Box smallBox = <span class="keyword">new</span> Box(<span class="number">5</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">bigBox.drawYourself();</span><br><span class="line"><span class="comment">//behavior</span></span><br><span class="line">smallBox.drawYourself();</span><br><span class="line"></span><br><span class="line">bigBox.changeVLineSymbol(<span class="string">"="</span>);</span><br><span class="line">bigBox.drawYourself();</span><br></pre></td></tr></table></figure></li><li><p>Inheritance:</p><ul><li>Different kinds of objects have commonality and differences: some additional features</li><li>Specialized objects <em>inherit</em> the commonality from other classes</li><li>Subclass inherits commonality from <em>superclasses</em></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SolidBox</span> <span class="keyword">extends</span> <span class="title">Box</span></span>&#123;...&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>Demo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawHLine</span><span class="params">(<span class="keyword">int</span> hSize; String hstr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i++&lt;h)</span><br><span class="line">            System.out.print(hstr);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawVLine</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> v, String vstr, String hstr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i++&lt;v-<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.print(vstr);</span><br><span class="line">            drawHLine(h-<span class="number">2</span>,hstr);</span><br><span class="line">            System.out.println(vstr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawBox</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> v, String vstr, String hstr, String fstr)</span></span>&#123;</span><br><span class="line">        drawHLine(hSize,hstr);</span><br><span class="line">        System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">        drawVLine(hSize,vSize,vstr,fstr);</span><br><span class="line">        drawHLine(hSize,hstr);</span><br><span class="line">        System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You can apply the method in Box in other public class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Box.drawBox(<span class="number">20</span>,<span class="number">10</span>,<span class="string">"|"</span>,<span class="string">"-"</span>,<span class="string">"$"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Box myBox= <span class="keyword">new</span> Box(<span class="number">20</span>,<span class="number">10</span>,<span class="string">"|"</span>,<span class="string">"-"</span>,<span class="string">"$"</span>);</span><br><span class="line">myBox.drawBox();<span class="comment">//no need for parameters here</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Arrays&quot;&gt;&lt;a href=&quot;#Arrays&quot; class=&quot;headerlink&quot; title=&quot;Arrays&quot;&gt;&lt;/a&gt;Arrays&lt;/h1&gt;&lt;p&gt;Suppose your boss ask you to calculate the average temperature of a week. How can you store seven temperatures? What if you are asked to do for 365 days? What if you are asked to do for 10 years.&lt;/p&gt;
&lt;p&gt;Array is a data structure which stores multiple values of same type.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; [] weeklyTemp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; av_temp=(weeklyTemp[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + weeklyTemp[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+...)/&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You use index to apply the element in the array. &lt;/p&gt;
&lt;p&gt;Index starts from 0.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;array_name.legth&lt;/code&gt; gives the size of array.&lt;/p&gt;
    
    </summary>
    
      <category term="Java for Dummies" scheme="https://github.com/JiamingXie/categories/Java-for-Dummies/"/>
    
    
      <category term="coding" scheme="https://github.com/JiamingXie/tags/coding/"/>
    
      <category term="Java" scheme="https://github.com/JiamingXie/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>陷入僵局</title>
    <link href="https://github.com/JiamingXie/2018/10/09/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0181009/"/>
    <id>https://github.com/JiamingXie/2018/10/09/股市观察日记181009/</id>
    <published>2018-10-09T10:15:07.000Z</published>
    <updated>2018-10-11T06:06:42.124Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>今天市场震荡分化，上证指数和上证50微红，其余指数小跌。从板块来看，采掘服务、石油、煤炭、次新股、航运、有色等板块涨幅居前，军工、国产软件、医药商业、半导体等板块跌幅居前。</p><p>截至收盘，沪指报2721.01点，涨幅0.17%；深成指报8046.39点，跌幅0.18%；创指报1345.95点，跌幅0.57%。创业板表现较差，盘中创出2014年8月以来新低。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw2tizkvzxj219e0kq0wf.jpg" alt=""></p><a id="more"></a><p>创业板的走势并不容乐观，之后还可再等一等。中美贸易战对于国产软件股和芯片股都是利好，之后总有他们站出来的时候。</p><p>沪深300和上证50的反弹行情还可以继续关注，今天收出的小阳说明市场还是比较犹豫的，大家不知道是应该加仓还是之后会继续跌。大概在2700的位置会有一个支撑，如果这个位置没有撑住，那么建议观望一下。中线行情依旧是震荡磨底，可以高抛低吸降低成本。长线现在是不错的建仓时机，这从私募加仓也可以看得出来。</p><hr><p><strong>消息面</strong></p><ul><li><p>【私募开始加仓，主要布局大盘蓝筹、大消费及新经济板块】</p><p>相关数据显示，9月份私募平均仓位为62.5%，较8月份上升约10个百分点，逆转了前5个月平均仓位持续下滑的趋势。部分中小型私募在9月下旬开始左侧建仓，主要布局大盘蓝筹股、大消费及新经济板块，而部分大型私募也进行了“倒金字塔”式布局。某资深业内人士表示，“淡水泉、星石、重阳等知名私募，仓位一直维持较高，对市场长期走势维持乐观。值得关注的是，一些中小型私募在经历减仓后，9月份反而开始慢慢加仓。”（上证报）</p></li><li><p>【机构：9月CPI增速或上升 基建投资有望见底回升】</p><p>近日，多机构发布了对9月份宏观经济数据的预测。从发布的预测来看，市场对9月份及接下来的经济形势较为悲观，关注点主要集中于需求侧增长乏力及外贸风险方面。在CPI和PPI数据方面，多家机构认为9月份CPI同比增速将进一步抬升至2.5%左右，PPI同比增速进一步回落至3.7%左右。（证券时报）</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;今天市场震荡分化，上证指数和上证50微红，其余指数小跌。从板块来看，采掘服务、石油、煤炭、次新股、航运、有色等板块涨幅居前，军工、国产软件、医药商业、半导体等板块跌幅居前。&lt;/p&gt;
&lt;p&gt;截至收盘，沪指报2721.01点，涨幅0.17%；深成指报8046.39点，跌幅0.18%；创指报1345.95点，跌幅0.57%。创业板表现较差，盘中创出2014年8月以来新低。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw2tizkvzxj219e0kq0wf.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>国庆归来开门绿</title>
    <link href="https://github.com/JiamingXie/2018/10/08/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0181008/"/>
    <id>https://github.com/JiamingXie/2018/10/08/股市观察日记181008/</id>
    <published>2018-10-08T15:13:58.000Z</published>
    <updated>2018-10-09T00:41:36.748Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>截至收盘，沪指收报2716.51点，跌3.72%，收创三个半月最大单日跌幅，成交额1415.3亿；深成指收报8060.83点，跌4.05%，成交额1474.1亿；创业板收报1353.67点，跌4.09%，成交额401亿。<br>行业板块全线飘绿，个股一片普跌，跌停个股数早盘较少，但随着股指进一步下跌，午后两市跌停股数明显增多，市场恐慌情绪上升。安防、通讯、旅游酒店、保险、酿酒、电子、民航、软件等多个行业板块遭重挫，板块指数跌逾4%，医疗、环保、银行、文化传媒、航天航空、券商等行业板块跌幅也不浅，板块指数跌逾3%。公用事业、贵金属、石油等跌幅相对较小。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw1nyy2po6j21920kgtdz.jpg" alt=""></p><a id="more"></a><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fw1nzsntaaj21920iwjvu.jpg" alt=""></p><p>今天的这波暴跌其实还是比较符合预期的，只是当时没想到会杀这么多。国庆期间外围股市纷纷下跌，中国作为经济大国不可能独善其身，且民间有说法中国股市向来是跟跌不跟涨。国庆节期间可以说是有利空也有利好。利好是央行放水，降准，放了七个多亿出来，财政方面也有积极表示，这一步是为了帮助企业解决流动性问题，今年来因为还不上钱而使债券逾期的企业很多，也有很多投资公司因为钱收不回来不得不抛售手头其他的持仓股票。利空方面，贸易战全面打响；香港方面基本面数据并不好看；人民币补跌，破6.93，破8月15日来新低，收盘时收复至6.9。夜间美国方面开盘，依旧不改跌势，科技股普跌带领大盘。</p><p>目前看来不建议马上操作了，这一波持续了半个月的强力反弹在国庆的欢声笑语中结束了，现在依照外围的股市，A股还是比较有压力的，短期内很难马上反弹，但是这一波下杀同时也给了一个机会，会出现很多被大盘拖累的超跌股。目前A股的估值依旧处于历史低位，但是短期内可能比较难迅速有起色，毕竟去杠杆等政策对企业的流动性压力还是比较大的，经济基本面也并不是很好。长线依旧看好，现在是建仓机会。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;截至收盘，沪指收报2716.51点，跌3.72%，收创三个半月最大单日跌幅，成交额1415.3亿；深成指收报8060.83点，跌4.05%，成交额1474.1亿；创业板收报1353.67点，跌4.09%，成交额401亿。&lt;br&gt;行业板块全线飘绿，个股一片普跌，跌停个股数早盘较少，但随着股指进一步下跌，午后两市跌停股数明显增多，市场恐慌情绪上升。安防、通讯、旅游酒店、保险、酿酒、电子、民航、软件等多个行业板块遭重挫，板块指数跌逾4%，医疗、环保、银行、文化传媒、航天航空、券商等行业板块跌幅也不浅，板块指数跌逾3%。公用事业、贵金属、石油等跌幅相对较小。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fw1nyy2po6j21920kgtdz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Control Statement Series</title>
    <link href="https://github.com/JiamingXie/2018/09/29/Control%20Statement%20Series/"/>
    <id>https://github.com/JiamingXie/2018/09/29/Control Statement Series/</id>
    <published>2018-09-29T12:13:13.000Z</published>
    <updated>2018-10-06T01:28:08.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Operators-Advanced-in-Java"><a href="#Operators-Advanced-in-Java" class="headerlink" title="Operators (Advanced) in Java"></a>Operators (Advanced) in Java</h1><ul><li><p>Compound assignment operators</p><p>+=, -=, *=, /=, %=</p><p>It is just the combination of operators and assignment operators.</p><p><code>s = s+2</code> → <code>s += 2</code></p><p><code>n1 = n1 * n2</code> → <code>n1 *= n2</code></p><p>… </p></li><li><p>Increment/decrement operators</p><p>++ and –</p><p>If you want to increase by one or decrease by one, then you use “++” or “–”</p><p><code>n += 1</code> → <code>n++</code></p><p><strong><em>n++ has assigned new value to n.</em></strong></p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> N1,N2;</span><br><span class="line">N1=<span class="number">9</span>;</span><br><span class="line">System.out.printf(<span class="string">"%d\n"</span>,N1++);<span class="comment">//This statement will first print N1, and then add one to it. Thus, it will show the original value "9".</span></span><br><span class="line">System.out.printf(<span class="string">"%d\n\n"</span>,N1); <span class="comment">//Then in this line, 1 is added up to nine, so it will print 10</span></span><br><span class="line"></span><br><span class="line">N2=<span class="number">9</span>;</span><br><span class="line">System.out.printf(<span class="string">"%d\n"</span>,++N2);<span class="comment">//before printf is executed, N2 will be added up to 1, so it will print 10</span></span><br><span class="line">System.out.printf(<span class="string">"%d\n\n"</span>,N2);<span class="comment">//This line will still print 10</span></span><br></pre></td></tr></table></figure><p>The pre and post ++/– will make the result slightly different.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count, loop;</span><br><span class="line">count=<span class="number">9</span>;</span><br><span class="line">loop=++count;</span><br><span class="line"><span class="comment">//Then loop = 10, count=10</span></span><br><span class="line"></span><br><span class="line">count=<span class="number">9</span>;</span><br><span class="line">loop= count++;</span><br><span class="line"><span class="comment">//Then loop=9, count=10</span></span><br></pre></td></tr></table></figure><p>Try the following program by yourself:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> loop=<span class="number">8</span>, count=<span class="number">15</span>,Num;</span><br><span class="line"></span><br><span class="line">Num= +loop++;<span class="comment">//The old value of loop is assigned to Num</span></span><br><span class="line">System.out.printf(<span class="string">"Num=%d, loop=%d\n"</span>, Num, loop);<span class="comment">//num=8,loop=9</span></span><br><span class="line">Num= ++Num;</span><br><span class="line">System.out.printf(<span class="string">"Num=%d, loop=%d\n"</span>, Num, loop);<span class="comment">//num=9, loop=9</span></span><br><span class="line">Num=count++ + loop;</span><br><span class="line">System.out.printf(<span class="string">"Num=%d, loop=%d\n"</span>, Num, loop);<span class="comment">//num=24=15(old count)+9 , count=16, loop = 9</span></span><br><span class="line">Num= --count+ --loop;</span><br><span class="line">System.out.printf(<span class="string">"Num=%d, loop=%d\n"</span>, Num, loop);<span class="comment">//num=15+8=23, count=15, loop = 8</span></span><br><span class="line">Num= loop + -Num;</span><br><span class="line">System.out.printf(<span class="string">"Num=%d, loop=%d\n"</span>, Num, loop);<span class="comment">//num= 8-23=-15</span></span><br></pre></td></tr></table></figure></li><li><p>Operator precedence</p><ul><li>Plays role in mix of operators in a statement</li><li><strong>Precedence Rule</strong> applies for different operators</li><li><strong>Associative Rule</strong> applies for same operators</li></ul><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvqq13hstwj20oe0g0tct.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvqq1a2z34j20q40h0adr.jpg" alt=""></p></li></ul><h1 id="Control-Statements-in-Java"><a href="#Control-Statements-in-Java" class="headerlink" title="Control Statements in Java"></a>Control Statements in Java</h1><p>Computer algorithm can be described by using three types of control statement.</p><p>Sequence: executed one by one;</p><h2 id="Selection-executed-depending-on-condition"><a href="#Selection-executed-depending-on-condition" class="headerlink" title="Selection: executed depending on condition"></a>Selection: executed depending on condition</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//given an age, determine if the person is a teenager</span></span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">Scanner getInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"Enter your age:"</span>);</span><br><span class="line"></span><br><span class="line">age = getInput.nextInt();</span><br><span class="line"><span class="comment">//teenager: age&gt;12 and age&lt;20</span></span><br><span class="line"><span class="keyword">if</span>(age&gt;<span class="number">12</span> &amp;&amp; age&lt;<span class="number">20</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"You are a teenager."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">Scanner getInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">"Enter your score:"</span>);</span><br><span class="line">score = getInput.nextInt();</span><br><span class="line"><span class="comment">//given a score score find out if the student go A,B,C,D, of F Grade</span></span><br><span class="line"><span class="comment">//depending upon sliding scale of +90 A, 80-89 B, 70-79 C,60-69 D, &lt;59 F</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(score &gt;= <span class="number">90</span>)</span><br><span class="line">    System.out.println(<span class="string">"Your grade is A"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">80</span>)</span><br><span class="line">    System.out.println(<span class="string">"Your grade is B"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">70</span>)</span><br><span class="line">    System.out.println(<span class="string">"Your grade is C"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(score &gt;= <span class="number">60</span>)</span><br><span class="line">    System.out.println(<span class="string">"Your grade is D"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    System.out.println(<span class="string">"Your grade is F"</span>);</span><br></pre></td></tr></table></figure><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(ControllingExpression)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> constant <span class="number">1</span>:</span><br><span class="line">        statement;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> constant <span class="number">2</span>:</span><br><span class="line">        statement;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">case</span> constant n:</span><br><span class="line">        statement;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        statement;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>All “switch” statements can be converted to “if…else…” statements.</strong></p><ul><li>Values for ‘case’: integer or character constants</li><li>Cannot use expressions or ranges</li><li>The order of the ‘case’ statements is unimportant</li><li>The default clause may occur first</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> firstN;</span><br><span class="line"><span class="keyword">float</span> secondN;</span><br><span class="line"><span class="keyword">char</span> op;</span><br><span class="line">Scanner readInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"Type a number, operator, number -- Separate by a space: "</span>);</span><br><span class="line">firstN = readInput.nextInt();</span><br><span class="line">op = readInput.next().charAt(<span class="number">0</span>);</span><br><span class="line">secondN = readInput.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(op == <span class="string">'+'</span>)</span><br><span class="line">    System.out.printf(<span class="string">"%5.2f + %5.2f = %5.2f"</span>, firstN, secondN, firstN + secondN);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">'-'</span>)</span><br><span class="line">    System.out.printf(<span class="string">"%5.2f - %5.2f = %5.2f"</span>, firstN, secondN, firstN - secondN);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">'*'</span>)</span><br><span class="line">    System.out.printf(<span class="string">"%5.2f * %5.2f = %5.2f"</span>, firstN, secondN, firstN * secondN);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">'/'</span>)</span><br><span class="line">    System.out.printf(<span class="string">"%5.2f / %5.2f = %5.2f"</span>, firstN, secondN, firstN / secondN);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="string">'%'</span>)</span><br><span class="line">    System.out.printf(<span class="string">"%5.2f %% %5.2f = %d"</span>, firstN, secondN, (<span class="keyword">int</span>)firstN % (<span class="keyword">int</span>)secondN);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    System.out.printf(<span class="string">"Unknown operator"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//convert the above code into case statement</span></span><br><span class="line"><span class="keyword">switch</span>(op)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'+'</span>: System.out.print(<span class="string">"%5.2f + %5.2f = %5.2f"</span>, firstN, secondN, firstN + secondN);<span class="keyword">break</span>;<span class="comment">//"break" here is a must. If "break" is not used, then all the following command will be executed.</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">'-'</span>: System.out.print(<span class="string">"%5.2f - %5.2f = %5.2f"</span>, firstN, secondN, firstN - secondN);<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'*'</span>: System.out.print(<span class="string">"%5.2f * %5.2f = %5.2f"</span>, firstN, secondN, firstN * secondN);<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'/'</span>: System.out.print(<span class="string">"%5.2f / %5.2f = %5.2f"</span>, firstN, secondN, firstN / secondN);<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'%'</span>: System.out.print(<span class="string">"%5.2f %% %5.2f = %d"</span>, firstN, secondN, (<span class="keyword">int</span>)firstN %(<span class="keyword">int</span>)secondN); <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: System.out.printf(<span class="string">"Unknown operator"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(age)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">14</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">19</span>:System.out.println(<span class="string">"You are a teenager."</span>);<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: System.out.println(<span class="string">"You are not a teenager."</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title="?:"></a><strong>?:</strong></h3><p>Conditional operator: <strong>? :</strong></p><p>Usually it is used for <strong>assignment</strong>.</p><p><code>(expression1) ? expression2: expression3;</code></p><p>If expression1 is true, expression2 will be evaluated, or expression3 will be evaluated.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> max;</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"Type two numbers -- Separated by a space: "</span>);</span><br><span class="line">firstN = readInput.nextInt();</span><br><span class="line">secondN = readInput.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (firstN&gt;secondN)</span><br><span class="line">    max=firstN;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    max=secondN;</span><br><span class="line">System.out.println(<span class="string">"The maximum of two numbers is: %5.2f"</span>,max);</span><br><span class="line"></span><br><span class="line"><span class="comment">//convert to ?:</span></span><br><span class="line">max= (firstN&gt;secondN)? firstN: secondN;</span><br></pre></td></tr></table></figure><h2 id="Repetition"><a href="#Repetition" class="headerlink" title="Repetition"></a>Repetition</h2><p>Loop structure is used to repeat a block of statements</p><p>Java provides two design of loop:</p><ul><li>controlled by an expression (counter)</li><li>controlled by a sentinel value (trip, signal value)</li></ul><h3 id="while-loop"><a href="#while-loop" class="headerlink" title="while loop"></a><strong>while</strong> loop</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Type1</span></span><br><span class="line"><span class="comment">//repeat while evaluated control-expression is not 0</span></span><br><span class="line">statement1;</span><br><span class="line"><span class="keyword">while</span>(control-expression)&#123;</span><br><span class="line">    statement(s);</span><br><span class="line">&#125;</span><br><span class="line">statementn;</span><br><span class="line"></span><br><span class="line"><span class="comment">//sample</span></span><br><span class="line"><span class="keyword">int</span> loop=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(loop++&lt;<span class="number">10</span>)</span><br><span class="line">    System.out.println(<span class="string">"Hello World"</span>);</span><br></pre></td></tr></table></figure><h3 id="do-while-loop"><a href="#do-while-loop" class="headerlink" title="do while loop"></a><strong>do while</strong> loop</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Type2</span></span><br><span class="line"><span class="comment">//repeat while evaluated control-expression is not 0</span></span><br><span class="line">statement1(s);</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    statements;</span><br><span class="line">&#125;<span class="keyword">while</span>;</span><br><span class="line">statement3(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//sample</span></span><br><span class="line"><span class="keyword">int</span> loopCount=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> charResponse=<span class="string">""</span>;</span><br><span class="line">Scanner readInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(<span class="string">"hello world"</span>);</span><br><span class="line">    System.out.println(<span class="string">"Continue? Press n to stop:"</span>);</span><br><span class="line">    charResponse = readInput.next().charAt(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (charResponse!=<span class="string">"n"</span>);</span><br><span class="line"><span class="comment">//When the character entered is not "n", the loop will go on. Once you enter "n", the loop will stop.</span></span><br><span class="line">System.out.println(<span class="string">"Done"</span>)</span><br></pre></td></tr></table></figure><h3 id="For-loop"><a href="#For-loop" class="headerlink" title="For loop"></a><strong>For</strong> loop</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Type3</span></span><br><span class="line"><span class="comment">//initialize expression1, repeat as expression2 is true and update expression3 each time.</span></span><br><span class="line"><span class="keyword">for</span>(InitializeExpression;</span><br><span class="line">    ControlExpression;</span><br><span class="line">    UpdateExpression)&#123;</span><br><span class="line">    BlockStatements;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*Loops for a counter must contain three actions:</p><ul><li>Counter is initialized</li><li>Counter is compared</li><li>Counter is incremented</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> loop=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(loop&lt;<span class="number">10</span>)&#123;</span><br><span class="line">    loop++;</span><br><span class="line">    System.out.println(<span class="string">"%d"</span>, loop);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//convert to for loop</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> loop=<span class="number">0</span>;loop&lt;<span class="number">10</span>;loop++)</span><br><span class="line">&#123;</span><br><span class="line">    System.out.println(loop);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Use derement operator to count down</li><li>use different counts</li><li>Count by characters instead of numbers</li><li>use any legal expressions for all three expressions</li><li>Leave any expression blank</li></ul><p><strong>Demo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line">System.out.println(<span class="string">"|                  |"</span>);</span><br><span class="line">System.out.println(<span class="string">"|                  |"</span>);</span><br><span class="line">System.out.println(<span class="string">"|                  |"</span>);</span><br><span class="line">System.out.println(<span class="string">"|                  |"</span>);</span><br><span class="line">System.out.println(<span class="string">"|                  |"</span>);</span><br><span class="line">System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"><span class="comment">//use while loop to draw first line of a box - 20 characters in width and uses "-"</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> hSize=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> vSize=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(count++&lt; hSize)</span><br><span class="line">    System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.printf(<span class="string">"/n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(count2++&lt; vSize-<span class="number">2</span>)&#123;</span><br><span class="line">    System.out.print(<span class="string">"|"</span>);</span><br><span class="line">    count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(count++&lt; hSize-<span class="number">2</span>)</span><br><span class="line">        System.out.print(<span class="string">" "</span>);</span><br><span class="line">    System.out.print(<span class="string">"|"</span>);</span><br><span class="line">    System.out.printf(<span class="string">"/n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(count++&lt; hSize)</span><br><span class="line">    System.out.print(<span class="string">"-"</span>);</span><br><span class="line">System.out.printf(<span class="string">"/n"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Operators-Advanced-in-Java&quot;&gt;&lt;a href=&quot;#Operators-Advanced-in-Java&quot; class=&quot;headerlink&quot; title=&quot;Operators (Advanced) in Java&quot;&gt;&lt;/a&gt;Operators (Advanced) in Java&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Compound assignment operators&lt;/p&gt;
&lt;p&gt;+=, -=, *=, /=, %=&lt;/p&gt;
&lt;p&gt;It is just the combination of operators and assignment operators.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s = s+2&lt;/code&gt; → &lt;code&gt;s += 2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;n1 = n1 * n2&lt;/code&gt; → &lt;code&gt;n1 *= n2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;… &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Increment/decrement operators&lt;/p&gt;
&lt;p&gt;++ and –&lt;/p&gt;
&lt;p&gt;If you want to increase by one or decrease by one, then you use “++” or “–”&lt;/p&gt;
&lt;p&gt;&lt;code&gt;n += 1&lt;/code&gt; → &lt;code&gt;n++&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;n++ has assigned new value to n.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java for Dummies" scheme="https://github.com/JiamingXie/categories/Java-for-Dummies/"/>
    
    
      <category term="coding" scheme="https://github.com/JiamingXie/tags/coding/"/>
    
      <category term="Java" scheme="https://github.com/JiamingXie/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>强者恒强</title>
    <link href="https://github.com/JiamingXie/2018/09/28/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180928/"/>
    <id>https://github.com/JiamingXie/2018/09/28/股市观察日记180928/</id>
    <published>2018-09-28T13:27:25.000Z</published>
    <updated>2018-09-29T00:20:00.307Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>沪指收报2821.35点，涨1.06%，成交额1254亿。深成指收报8401.09点，涨0.80%，成交额1378亿。创业板收报1411.34点，涨0.78%，成交额414亿。沪指全周上涨0.85%，深成指跌0.10%，创业板指涨0.02%。沪指本月上涨3.53%，创1月份来最大单月涨幅；深成指跌0.76%，创业板指跌1.66%。</p><p>28日，节前最后一个交易日，两市小幅高开，在北汽新能源板块的带动下，市场一度冲高，但此后大盘随即回落，次新股较昨日显著回暖，市场逐渐企稳，<strong>银行、保险</strong>逐渐活跃，指数稳步上行，午后两市稳步走强，<strong>有色板块</strong>的拉升刺激了主板指数的上行，而以银之杰为首的创业板人气股则带动了一波中小创，市场整体较昨日明显活跃，盘面上看，大盘个股涨多跌少，市场上呈现<strong>权重搭台，题材唱戏</strong>的走势，临近尾盘，指数高位盘整。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvpl7cgim5j218s0j2jym.jpg" alt=""></p><a id="more"></a><p>经过这两周的上涨，大盘可能会进入横盘整理的阶段，震荡期间可以高抛低吸，或者借机入场。</p><p><strong>消息面</strong></p><ul><li><p>李克强：民营经济的管理者、经营者和生产者，都是中国特色社会主义的建设者</p><p>李克强总理9月28日上午在浙江台州主持召开座谈会。李克强说，民营经济和国有经济一样，都是社会主义市场经济的重要组成部分。民营经济的管理者、经营者和生产者，都是中国特色社会主义的建设者。我国的基本经济制度以及社会主义市场经济早已写入宪法。必须坚持“两个毫不动摇”，对各类所有制企业一视同仁，这一点绝不会有任何变化。</p></li><li><p>李克强：下一步要更大力度简政、减税、减费</p><p>李克强28日上午在浙江台州主持召开座谈会。听取企业家关于实体经济发展的意见建议后，李克强明确表示，下一步要更大力度简政、减税、减费。“简政”要继续深化“放管服”改革，降低制度性交易成本。“减税”要加快推进增值税税率“三档变两档”，研究降低增值税税率。“减费”要动真格地降低合规收费，坚决惩治乱收费，同时继续降低企业物流、电力等各类成本。</p></li><li><p>深交所三季报预披露时间表出炉，原来首家披露的公司益生股份已更改。现为炼石有色拔得头筹，将于10月9日披露。原定于10月10日披露的益生股份，现改为10月16日披露。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;沪指收报2821.35点，涨1.06%，成交额1254亿。深成指收报8401.09点，涨0.80%，成交额1378亿。创业板收报1411.34点，涨0.78%，成交额414亿。沪指全周上涨0.85%，深成指跌0.10%，创业板指涨0.02%。沪指本月上涨3.53%，创1月份来最大单月涨幅；深成指跌0.76%，创业板指跌1.66%。&lt;/p&gt;
&lt;p&gt;28日，节前最后一个交易日，两市小幅高开，在北汽新能源板块的带动下，市场一度冲高，但此后大盘随即回落，次新股较昨日显著回暖，市场逐渐企稳，&lt;strong&gt;银行、保险&lt;/strong&gt;逐渐活跃，指数稳步上行，午后两市稳步走强，&lt;strong&gt;有色板块&lt;/strong&gt;的拉升刺激了主板指数的上行，而以银之杰为首的创业板人气股则带动了一波中小创，市场整体较昨日明显活跃，盘面上看，大盘个股涨多跌少，市场上呈现&lt;strong&gt;权重搭台，题材唱戏&lt;/strong&gt;的走势，临近尾盘，指数高位盘整。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvpl7cgim5j218s0j2jym.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>节前小调</title>
    <link href="https://github.com/JiamingXie/2018/09/27/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180927/"/>
    <id>https://github.com/JiamingXie/2018/09/27/股市观察日记180927/</id>
    <published>2018-09-27T15:53:23.000Z</published>
    <updated>2018-09-28T00:21:26.631Z</updated>
    
    <content type="html"><![CDATA[<p>盘面分析</p><p>截至收盘，沪指收报2791.77点，跌0.54%，成交额1234亿。深成指收报8334.75点，跌1.02%，成交额1626亿。创业板收报1400.36点，跌1.44%，成交额495亿。三大指数小幅低开，昨日活跃的权重股集体回调，而中小创也表现颓势，节前倒数第二个交易日，市场抛压较大，此后医药股拉升，带动指数一度走强，但两市依旧冲高回落，午后指数稳步走弱，有色钒板块的冲高一度带动有色金属板块的走强，但大盘依旧颓势，期指单边下行毫无反抗，临近尾盘，大盘持续走低。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvoxn9m1inj219u0kedlr.jpg" alt=""></p><p>早盘的时候的上突有点“作死”的意味，这种时候如果能下跌把空方力量释放干净反而是比较健康的。中午我们预测在2790点位会反弹，事实是反弹了，但是这一下太猛了，作死第二突彻底把今天的走势给突死了。本来的预期是砸下去拉上来收一个下影线，现在看来市场比我们预期要弱。</p><a id="more"></a><p>预计节前最后一个交易日还是以回调为主，节后调整过后还会有一波行情，但是具体的情况需要看国庆节外盘的情况和消息面来推断，接下来的震荡期间还是有入场机会。</p><p><strong>消息面</strong></p><ul><li><p><strong>富时罗素CEO：五到十年内会有2.5万亿美元增量资金流入中国证券市场</strong></p><p>富时罗素CEO麦思平说：“全球大概有25万亿美元的被动资金追踪富时罗素和MSCI两大指数公司。我们相信中国市场规模在未来能够占25万亿美元的10%以上，也就是大约2.5万亿美元的被动资金将有望在未来五到十年内流入A股市场。”（上证报）</p></li><li><p><strong><font color="red">习近平：党中央毫不动摇地支持民营经济发展</font></strong></p><font color="red">27日上午，习近平在辽宁忠旺集团考察。习近平强调，改革开放以来，党中央始终关心支持爱护民营企业。我们毫不动摇地发展公有制经济，毫不动摇地鼓励、支持、引导、保护民营经济发展。现在的很多改革举措都是围绕怎么进一步发展民营经济，对这一点民营企业要进一步增强信心。我们要为民营企业营造好的法治环境，进一步优化营商环境。党的路线方针政策是有益于、有利于民营企业发展的。民营企业也要进一步弘扬企业家精神、工匠精神，抓住主业，心无旁骛，力争做出更多的一流产品，发展一流的产业，为实现“两个一百年”目标作出新的贡献。（新华社）</font></li><li><p><strong><font color="red">习近平：怀疑、唱衰国企的思想和言论都是错误的</font></strong></p><font color="red">27日上午，习近平来到中国石油辽阳石化公司考察。他强调，我们的国有企业要继续做强做优做大，那种不要国有企业、搞小国有企业的说法、论调都是错误的、片面的。我们实行公有制为主体、多种所有制经济共同发展的基本经济制度，这一点毫不动摇。任何怀疑、唱衰国有企业的思想和言论都是错误的。坚持党对国有企业的领导，必须一以贯之；国有企业建立现代企业制度，也必须一以贯之。我们要沿着这条路笃定踏实地向前推进。（新华社）</font></li><li><p><strong>减税万亿红利将深度释放 新一轮减税举措细则将密集落地</strong></p><p>我国新个税红利释放在即，10月1日起，我国个税起征点将实现从3500元调至5000元，与此同时，3％、10％和20%三档税率级距也将扩大。业内指出，调高起征点和调整税率将释放减税效应，尤其是月薪两万以下收入群体的减税效应更加明显。不仅仅是个税，事实上，近期伴随新一轮减税举措细则的密集落地，我国减税政策掷地有声，全年万亿红利将深度释放。（经参）</p></li></ul><p><strong>特别鸣谢</strong></p><p><img src="http://ww1.sinaimg.cn/thumbnail/6a5a25c2gy1fvnejwuhbnj20io0is7a0.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;盘面分析&lt;/p&gt;
&lt;p&gt;截至收盘，沪指收报2791.77点，跌0.54%，成交额1234亿。深成指收报8334.75点，跌1.02%，成交额1626亿。创业板收报1400.36点，跌1.44%，成交额495亿。三大指数小幅低开，昨日活跃的权重股集体回调，而中小创也表现颓势，节前倒数第二个交易日，市场抛压较大，此后医药股拉升，带动指数一度走强，但两市依旧冲高回落，午后指数稳步走弱，有色钒板块的冲高一度带动有色金属板块的走强，但大盘依旧颓势，期指单边下行毫无反抗，临近尾盘，大盘持续走低。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvoxn9m1inj219u0kedlr.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;早盘的时候的上突有点“作死”的意味，这种时候如果能下跌把空方力量释放干净反而是比较健康的。中午我们预测在2790点位会反弹，事实是反弹了，但是这一下太猛了，作死第二突彻底把今天的走势给突死了。本来的预期是砸下去拉上来收一个下影线，现在看来市场比我们预期要弱。&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Natural Language Processing - 使用sklearn进行文本特征提取</title>
    <link href="https://github.com/JiamingXie/2018/09/27/Natural%20Language%20Processing%20-%20Feature%20Extraction%20and%20Selection/"/>
    <id>https://github.com/JiamingXie/2018/09/27/Natural Language Processing - Feature Extraction and Selection/</id>
    <published>2018-09-27T02:58:34.000Z</published>
    <updated>2018-09-27T16:19:47.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分词-Word-Segmentation"><a href="#分词-Word-Segmentation" class="headerlink" title="分词 Word Segmentation"></a>分词 Word Segmentation</h1><p>jieba中文分词是一款完全开源的分词工具，是现在最主流的分词包之一。</p><p>分词阶段的预处理工作主要有两个，一个是分词，一个是去掉<em>停词</em>（stop words）。</p><p>stop_words是一个由停词组成的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stpwrdpath=<span class="string">' .txt'</span></span><br><span class="line"><span class="keyword">with</span> open(stpwrdpath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    stopword= fp.read().decode(<span class="string">'utf-8'</span>) <span class="comment">#extract stop words</span></span><br><span class="line">stpwrdlst =stopword.splitlines()</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">words_segment</span><span class="params">(input_string, stop_words=[])</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    The function use jieba to segment sentences and remove characters/words in stop_words.</span></span><br><span class="line"><span class="string">    Input:</span></span><br><span class="line"><span class="string">        input_string: string, the sentence to segment.</span></span><br><span class="line"><span class="string">        stop_words: list of strings that are going to be removed after word segmentation.</span></span><br><span class="line"><span class="string">    Output:</span></span><br><span class="line"><span class="string">        word_result = string, words joined by blank space after segmentation.</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">seg_generator=jieba.cut(input_string, cut_all= <span class="keyword">False</span>)</span><br><span class="line">    word_result= <span class="string">" "</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> seg_generator:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">not</span> <span class="keyword">in</span> stop_words_list:</span><br><span class="line">            word_result += (word + <span class="string">' '</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> word_result</span><br></pre></td></tr></table></figure><h1 id="文本转化为代表词频的特征向量-CountVectorize"><a href="#文本转化为代表词频的特征向量-CountVectorize" class="headerlink" title="文本转化为代表词频的特征向量 CountVectorize"></a>文本转化为代表词频的特征向量 CountVectorize</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line">vectorizer = CountVectorizer(stop_words=stpwrdlst)</span><br><span class="line">context_vector = vectorizer.fit_transform(listOfStirng) <span class="comment">#Learn the vocabulary dictionary and return term-document matrix.</span></span><br><span class="line"><span class="comment">#listOfString: The list containing all the sentences.</span></span><br><span class="line"></span><br><span class="line">print(vectorizer.get_feature_names()) <span class="comment">#get the list of feature words</span></span><br><span class="line">print(vectorizer.vocabulary_) <span class="comment">#get the dictionary of feature words and # of occurance</span></span><br><span class="line">print(vectorizer.toarray()) <span class="comment">#get the sparse=matrix of feature occurance</span></span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> vectorizer.vocabulary_.items():</span><br><span class="line">    print(key,value) <span class="comment">#print feature words and # of occurance one by one</span></span><br></pre></td></tr></table></figure><p><strong>token_pattern的使用</strong></p><p>因为有些时候CountVectorizer会把一个专有名词也按照空格分开，有时并不符合需求。比如：World Economic Forum</p><p>可以通过token_pattern来自定义分隔符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nn=[</span><br><span class="line">    <span class="string">"People's Republic of China@中华人民共和国。"</span>,</span><br><span class="line">    <span class="string">"World Economic Forum@世界经济论坛"</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"><span class="comment">#默认token_pattern=r"(?u)\b\w\w+\b"</span></span><br><span class="line">vectorizer=CountVectorizer(token_pattern=<span class="string">r"(?u)\b[^@]+\b"</span>)</span><br><span class="line">wordFrequencyMatrix = vectorizer.fit_transform(nn)</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span>  vectorizer.get_feature_names():</span><br><span class="line">    <span class="keyword">print</span> (f)</span><br></pre></td></tr></table></figure><h1 id="逆文档频率-TfidfVectorizer-TfidfTransformer"><a href="#逆文档频率-TfidfVectorizer-TfidfTransformer" class="headerlink" title="逆文档频率 TfidfVectorizer/TfidfTransformer"></a>逆文档频率 TfidfVectorizer/TfidfTransformer</h1><p><strong>Term Frequency (TF)</strong>:</p><p>$$tf(t,d)=\frac{f(t,d)+1}{||x||}$$</p><p>$f(t,d)$: frequency of term t in document d</p><p>||x||: (Euclidean distance) L2 norm of the count vector.</p><p><strong>Inverse Document Frequency (IDF)</strong>:</p><p>measures how rare or common a word is in a corpus.</p><p>$$idf(t,d)=log\frac{N}{1+|d\ \in\  D :\  t\  \in\ d|}$$</p><p>N: Total # of documents in the corpus</p><p>$d\ \in\  D :\  t\  \in\ d$  is the # of ducuments in the corpus that contain the term t.</p><p>Words like “I”, “will” contribute little to the classification of  texts. Thus, idf will penalize the importance of this kind of words.</p><p> 如果一类文本（比如说讲篮球赛的文本中过分频繁出现一些词如“篮球”“篮板”等词语）频繁出现一些对文本分类没有贡献的词，那么这类词的重要性会被IDF“惩罚”（penalized）。</p><hr><p>在分词以后就可以将文本转化为逆文档词频的特征向量（矩阵）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> CountVectorizer</span><br><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfTransformer</span><br><span class="line"></span><br><span class="line">listOfStirng=[<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>]</span><br><span class="line">vectorizer = CountVectorizer(stop_words=stpwrdlst)</span><br><span class="line">context_vector = vectorizer.fit_transform(listOfStirng)</span><br><span class="line"></span><br><span class="line">tfidf_transformer=TfidfTransformer()</span><br><span class="line">tfidf=tfidf_transformer.fit_transform(context_vector)<span class="comment">#calculate tf-idf for each word feature</span></span><br><span class="line">word=vectorizer.get_feature_names() <span class="comment">#name of different features</span></span><br><span class="line">weight=tfidf.toarray() <span class="comment">#the matrix of feature weight of different key words</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(weight)):<span class="comment">#print the keyword and feature weight in each text</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(word)):</span><br><span class="line">print(word[j], weight[i][j]) </span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</span><br><span class="line">listOfStirng=[<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>]</span><br><span class="line">tfidf=TfidfVectorizer(stop_words=stopwordlist)</span><br><span class="line">weight=tfidf.fit_transform(all_list).toarray()<span class="comment">#the matrix of feature weight of different key words</span></span><br><span class="line">word=tfidf.get_feature_names()<span class="comment">#name of different features</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(weight)):<span class="comment">#print the keyword and feature weight in each text</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(word)):</span><br><span class="line">print(word[j], weight[i][j])</span><br></pre></td></tr></table></figure><p>Thus, CountVectorizer + TfidfTransformer = TfidVectorizer.</p><h1 id="特征选择-Feature-Selection"><a href="#特征选择-Feature-Selection" class="headerlink" title="特征选择 Feature Selection"></a>特征选择 Feature Selection</h1><p><strong>Univariate feature selection</strong></p><ul><li>SelectKBest: removes all but the k highest scoring features</li><li>SelectPercentile: emoves all but a user-specified highest scoring percentage of features</li></ul><p>Chi-squared: <em>chi2(X,y)</em> computes chi-squared stats between each non-negative feature and class.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> SelectKBest</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> sklearn.feature_selection <span class="keyword">import</span> chi2</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>iris = load_iris()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X, y = iris.data, iris.target</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X.shape</span><br><span class="line">(<span class="number">150</span>, <span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_new = SelectKBest(chi2, k=<span class="number">2</span>).fit_transform(X, y)</span><br><span class="line"><span class="comment">#choose the best two features</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X_new.shape</span><br><span class="line">(<span class="number">150</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>Chi2 can be changed to other objects:</p><ul><li>regression: f_regression</li><li>classification: chi2/f_classif</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分词-Word-Segmentation&quot;&gt;&lt;a href=&quot;#分词-Word-Segmentation&quot; class=&quot;headerlink&quot; title=&quot;分词 Word Segmentation&quot;&gt;&lt;/a&gt;分词 Word Segmentation&lt;/h1&gt;&lt;p&gt;jieba中文分词是一款完全开源的分词工具，是现在最主流的分词包之一。&lt;/p&gt;
&lt;p&gt;分词阶段的预处理工作主要有两个，一个是分词，一个是去掉&lt;em&gt;停词&lt;/em&gt;（stop words）。&lt;/p&gt;
&lt;p&gt;stop_words是一个由停词组成的列表。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stpwrdpath=&lt;span class=&quot;string&quot;&gt;&#39; .txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(stpwrdpath, &lt;span class=&quot;string&quot;&gt;&#39;rb&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; fp:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stopword= fp.read().decode(&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#extract stop words&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stpwrdlst =stopword.splitlines()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Data Mining" scheme="https://github.com/JiamingXie/categories/Data-Mining/"/>
    
    
      <category term="NLP" scheme="https://github.com/JiamingXie/tags/NLP/"/>
    
      <category term="Machine Learning" scheme="https://github.com/JiamingXie/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>重磅利好？MSCI拟将提高A股纳入因子</title>
    <link href="https://github.com/JiamingXie/2018/09/26/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180926/"/>
    <id>https://github.com/JiamingXie/2018/09/26/股市观察日记180926/</id>
    <published>2018-09-26T15:56:27.000Z</published>
    <updated>2018-09-28T00:17:25.098Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>截至收盘，沪指收报2806.81点，涨0.92%，成交额1451亿。深成指收报8420.54点，涨0.80%，成交额1653亿。创业板收报1420.75点，涨1.06%，成交额466亿。早盘三大指数小幅高开，随后白马股表现强势，白酒、保险板块持续走强，但是中小创则依然萎靡，午后指数冲高回落，盘面上物流板块持续活跃，两市个股普涨，板块多数飘红，临近尾盘，大盘持续震荡。</p><p>从技术面上来看，今天的整体走势还是相当强劲的，比预期中要更强一些，但是还是冲高回落拉出了一根上影线。今天的这波涨势很可能是得益于MSCI考虑提高A股权重以及富时罗素考虑将A股纳入其指数体系。股票市场提前反应了这个预期。俗话说：“利好出尽是利空”。不管是不是纳入指数体系，预计明天都会有一定幅度的回调。纳入了就是小跌，没有纳入就是大跌。</p><p>节前两天的走势估计是小幅度回调加横盘震荡，节后继续震荡上行。</p><a id="more"></a><p><strong>消息面</strong></p><ul><li><strong>MSCI考虑将中国大盘A股纳入因子提高3倍</strong></li></ul><p>北京时间9月26日，国际大型指数公司MSCI发布新闻稿称，就进一步提高A股在MSCI指数中的权重展开咨询，MSCI表示，此次咨询是在建立在中国A股以5％的纳入因子首次加入MSCI中国指数及其相关综合性指数（如MSCI新兴市场指数）的成功实施基础上。</p><p>为此，MSCI进一步提出三项建议：</p><blockquote><p>将中国大盘A股的纳入因子从5％增加到20％，于2019年5月半年度指数评审和2019年8月季度指数评审这两个阶级分步实施;</p></blockquote><blockquote><p>从2019年5月半年度指数评审开始，将深交所创业板市场加入符合MSCI指数条件的证券交易所名单;</p></blockquote><blockquote><p>作为2020年5月半年度指数评审的一部分，将中国中盘A股以20%的纳入因子一步纳入MSCI中国指数。</p></blockquote><p>【MSCI：660亿美元增量资金将入市】MSCI亚太研究部主管谢征傧告诉记者，根据MSCI测算，以每5%的因子纳入A股，带来的资金大约是220亿。若此次咨询结果正面，则A股纳入的因子提升至4倍，基于5%的纳入因子带来的资金量测算，预计将有660亿美元的海外增量资金。（中国证券网）</p><p>同时，富时罗素将在北京时间9月27日凌晨正式宣布是否将中国A股纳入其指数体系，坊间普遍认为，从目前情势来看，A股被纳入的概率极大。</p><p><strong>特别鸣谢</strong></p><p><img src="http://ww1.sinaimg.cn/thumbnail/6a5a25c2gy1fvnejwuhbnj20io0is7a0.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;截至收盘，沪指收报2806.81点，涨0.92%，成交额1451亿。深成指收报8420.54点，涨0.80%，成交额1653亿。创业板收报1420.75点，涨1.06%，成交额466亿。早盘三大指数小幅高开，随后白马股表现强势，白酒、保险板块持续走强，但是中小创则依然萎靡，午后指数冲高回落，盘面上物流板块持续活跃，两市个股普涨，板块多数飘红，临近尾盘，大盘持续震荡。&lt;/p&gt;
&lt;p&gt;从技术面上来看，今天的整体走势还是相当强劲的，比预期中要更强一些，但是还是冲高回落拉出了一根上影线。今天的这波涨势很可能是得益于MSCI考虑提高A股权重以及富时罗素考虑将A股纳入其指数体系。股票市场提前反应了这个预期。俗话说：“利好出尽是利空”。不管是不是纳入指数体系，预计明天都会有一定幅度的回调。纳入了就是小跌，没有纳入就是大跌。&lt;/p&gt;
&lt;p&gt;节前两天的走势估计是小幅度回调加横盘震荡，节后继续震荡上行。&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Operators - Assignment, Arithmetic, Relational, Logical</title>
    <link href="https://github.com/JiamingXie/2018/09/26/Operators%20-%20Assignment,%20Arithmetic,%20Relational,%20Logical/"/>
    <id>https://github.com/JiamingXie/2018/09/26/Operators - Assignment, Arithmetic, Relational, Logical/</id>
    <published>2018-09-26T12:52:38.000Z</published>
    <updated>2018-09-28T07:05:19.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Assignment-Operator"><a href="#Assignment-Operator" class="headerlink" title="Assignment Operator"></a>Assignment Operator</h1><ul><li>Assigns the value from right operand to the left.</li><li>‘=’ operator is used as assignment operator</li><li>Variable = Expression<ul><li>A = B;</li><li>yourSalary= GetYourSalary();</li><li>int temp = 55;</li></ul></li></ul><a id="more"></a><h1 id="Arithmetic-Operator"><a href="#Arithmetic-Operator" class="headerlink" title="Arithmetic Operator"></a>Arithmetic Operator</h1><p><strong>Unary</strong>: require only one operand</p><p>+, -</p><p>++ Pre/Post Increment</p><p>– Pre/Post Decrement</p><p><strong>%</strong> Modulus/Remainder: e.g. 99%2=1</p><p><strong>Binary</strong>: require two operands</p><h1 id="Control-Statement"><a href="#Control-Statement" class="headerlink" title="Control Statement"></a>Control Statement</h1><p>Execute different code depending upon circumstances.</p><p><strong>“if”</strong> is one of the control statements.</p><p>There is also another one control statement-<strong>“if…else”, “if…else if….else”</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstJavaClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> yourAge; <span class="comment">//implicit initializing</span></span><br><span class="line">        <span class="keyword">int</span> myAge = <span class="number">21</span>; <span class="comment">//explicit initializing</span></span><br><span class="line">        </span><br><span class="line">        Scanner readInput= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">"How old are you?"</span>);</span><br><span class="line">        yourAge=readInput.nextInt();<span class="comment">// Assign the value of next input to readInput.</span></span><br><span class="line">        <span class="keyword">if</span> (yourAge &gt; <span class="number">50</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are golden.\n"</span>);</span><br><span class="line">        &#125;<span class="comment">//Even if it is just one line, you'd better add "&#123;&#125;" here.</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are not so golden.\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Relational-Operator"><a href="#Relational-Operator" class="headerlink" title="Relational Operator"></a>Relational Operator</h1><p>It defines the relation between operands.</p><table><thead><tr><th>Operator</th><th>Meaning</th></tr></thead><tbody><tr><td>==</td><td>Equal</td></tr><tr><td>!=</td><td>Not equal</td></tr><tr><td>&lt;</td><td>less than</td></tr><tr><td>&gt;</td><td>more than</td></tr><tr><td>&lt;=</td><td>Less than or equal to</td></tr><tr><td>&gt;=</td><td>More than or equal to</td></tr></tbody></table><p>Every relational expression evaluates to a True or a False.</p><h1 id="Logical-Operators"><a href="#Logical-Operators" class="headerlink" title="Logical Operators"></a>Logical Operators</h1><p>used for multiple conditions in a statement.</p><table><thead><tr><th>Operator</th><th>Meaning</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>AND</td></tr><tr><td>&#124;&#124;</td><td>OR</td></tr><tr><td>!</td><td>NOT</td></tr></tbody></table><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p><strong>Demo 1</strong></p><p>It is just the same as the previous one, but let me mention a little bit about this <strong>“args”</strong> in the last line.</p><p>“args”, which comes from <strong>main</strong>, is a command line argument.</p><p>Suppose you run the program from the command. You need to run the folloing code:</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Helloworld <span class="number">50</span> <span class="number">60</span></span><br></pre></td></tr></table></figure><p>You need to passing some value to it.</p><p>This 50 and 60 will come into the argument.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstJavaClass</span></span>&#123;</span><br><span class="line">    <span class="comment">//command line</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> yourAge; <span class="comment">//implicit initializing</span></span><br><span class="line">        <span class="keyword">int</span> myAge = <span class="number">21</span>; <span class="comment">//explicit initializing</span></span><br><span class="line">        </span><br><span class="line">        Scanner readInput= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">"How old are you?"</span>);</span><br><span class="line">        yourAge=readInput.nextInt();<span class="comment">// Assign the value of next input to readInput.</span></span><br><span class="line">        <span class="keyword">if</span> (yourAge &gt; <span class="number">50</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are golden.\n"</span>);</span><br><span class="line">        &#125;<span class="comment">//Even if it is just one line, you'd better add "&#123;&#125;" here.</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are not so golden.\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">"I told you so"</span>,args[<span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This args will contain 50 and 60. args[0]=50, args[1]=60.</p><p><strong>Demo 2</strong></p><p>Write a program which asks the user to enter their age and then you print the following messages, depending upon their age:</p><ul><li><p>If the age is less than 13, then say ‘you are a kid’;</p></li><li><p>if the age is greater than 19, then say ‘you are an adult’;</p></li><li><p>otherwise say ‘you are a teenager’.</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AgeCheck</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> yourAge; </span><br><span class="line">       </span><br><span class="line">        Scanner readInput= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">"Please enter your age:"</span>);</span><br><span class="line">        yourAge=readInput.nextInt();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//if (yourAge&gt;12 &amp;&amp; yourAge&lt;20)</span></span><br><span class="line">        <span class="comment">//System.out.printf("You are a teenager.");</span></span><br><span class="line">        <span class="keyword">if</span> (yourAge &lt;= <span class="number">13</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are a kid.\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (yourAge &gt; <span class="number">19</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are an adult.\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">"You are a teenager."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Assignment-Operator&quot;&gt;&lt;a href=&quot;#Assignment-Operator&quot; class=&quot;headerlink&quot; title=&quot;Assignment Operator&quot;&gt;&lt;/a&gt;Assignment Operator&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Assigns the value from right operand to the left.&lt;/li&gt;
&lt;li&gt;‘=’ operator is used as assignment operator&lt;/li&gt;
&lt;li&gt;Variable = Expression&lt;ul&gt;
&lt;li&gt;A = B;&lt;/li&gt;
&lt;li&gt;yourSalary= GetYourSalary();&lt;/li&gt;
&lt;li&gt;int temp = 55;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java for Dummies" scheme="https://github.com/JiamingXie/categories/Java-for-Dummies/"/>
    
    
      <category term="coding" scheme="https://github.com/JiamingXie/tags/coding/"/>
    
      <category term="Java" scheme="https://github.com/JiamingXie/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Data Types - Primitive Data Types, Usage</title>
    <link href="https://github.com/JiamingXie/2018/09/26/Data%20Types%20-%20Primitive%20Data%20Types,%20Usage/"/>
    <id>https://github.com/JiamingXie/2018/09/26/Data Types - Primitive Data Types, Usage/</id>
    <published>2018-09-26T11:02:28.000Z</published>
    <updated>2018-09-26T15:54:46.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Statements-Tokens"><a href="#Statements-Tokens" class="headerlink" title="Statements: Tokens"></a>Statements: Tokens</h1><p>Tokens are the smallest element parsed by the compiler.</p><a id="more"></a><h2 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a>Keywords</h2><p>The reserved words of java language, like</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span></span><br><span class="line"><span class="keyword">public</span></span><br><span class="line"><span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class"><span class="title">final</span></span></span><br><span class="line"><span class="class">.</span></span><br><span class="line"><span class="class"><span class="title">while</span></span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class"><span class="title">for</span></span></span><br><span class="line"><span class="class"><span class="title">if</span></span></span><br><span class="line"><span class="class"><span class="title">else</span></span></span><br></pre></td></tr></table></figure><p>You use this words for special purposes.</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvn5oqqvpej20t40960vj.jpg" alt=""></p><h2 id="Names-Identifiers"><a href="#Names-Identifiers" class="headerlink" title="Names (Identifiers)"></a>Names (Identifiers)</h2><p>Names are used to identify your program elements.</p><p>The variable and method names, like radius, pi, println, area, main…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>radius=<span class="number">2</span>; </span><br><span class="line">        <span class="keyword">double</span> area;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> pi=<span class="number">3.142</span>;</span><br><span class="line"></span><br><span class="line">        area=pi*radius*radius;</span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">"The area is: "</span>);</span><br><span class="line">        System.out.println(area);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Naming rules and conventions</strong></p><p><strong>Rules:</strong></p><ul><li>Any length</li><li>Must be within a letter</li><li>May contain digits and underscores</li><li>Case sensitive</li></ul><p><strong>Convention: (Not mandatory)</strong></p><ul><li>Generally variables are lower case characters and numbers</li><li>Avoid using underscores.</li><li>Capitalize the first letter of second word if needed: myHeight</li></ul><h2 id="Punctuation"><a href="#Punctuation" class="headerlink" title="Punctuation"></a>Punctuation</h2><h2 id="Character-constants"><a href="#Character-constants" class="headerlink" title="Character constants"></a>Character constants</h2><p>One character</p><ul><li>‘A’, ‘a’, ‘9’, ‘$’, ‘%’</li><li>One character defined character set</li><li>Must surround by single quotation mark</li><li>There should be only one character. ‘ab’, ‘abc’ are wrong.</li></ul><h2 id="String-constants"><a href="#String-constants" class="headerlink" title="String constants"></a>String constants</h2><h2 id="Numeric-constants"><a href="#Numeric-constants" class="headerlink" title="Numeric constants"></a>Numeric constants</h2><p>Contiguous sequence of digits</p><ul><li>Never contains a dollar, comma or space</li><li>May contain a decimal (dot)</li><li>e.g. 1023, 5.5</li></ul><h2 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h2><p>Act upon operands</p><ul><li>Assignment Operators: =</li><li>Arithmetic Operators: +,-,*,/,%</li><li>Relational Operators: &lt;, &lt;=, ==, &gt;=, &gt; !=</li></ul><h2 id="White-space-Special-Symbol"><a href="#White-space-Special-Symbol" class="headerlink" title="White space, Special Symbol"></a>White space, Special Symbol</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; : , '' [] &#123;&#125; () = ... #</span><br></pre></td></tr></table></figure><h1 id="Data-Types"><a href="#Data-Types" class="headerlink" title="Data Types"></a>Data Types</h1><ul><li><p><strong>Memory</strong></p><ul><li>It is like rows of post box (slot) to store data</li><li>Number of slot is its address where one byte of data can be stored</li><li>Some logical data value can spam more than one slot</li><li><strong>When you define a variable, the computer creates a place for it.</strong></li></ul></li><li><p><strong>Data Type</strong></p><p>Type names a logical meaning to a <strong><em>span of memory</em></strong></p><font color="#4169E1">You should be able to answer “What is data type?” during an interview.</font><p>e.g. Int, float etc.</p><ul><li><p><strong>Byte</strong>: for small numbers and characters (-127 to 128)</p><p><em>\</em>Characters are also stored as number. So you can mix number and characters with Byte.*</p><p><strong><em>Hence it can alse be printed in number. It is only the matter that how you want to display it.</em></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> myChar=<span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">byte</span> myNumber= <span class="number">65</span>;</span><br><span class="line">String myString= <span class="string">"Hello How are you"</span>;</span><br><span class="line"><span class="comment">//You can assign different data type when print the input.</span></span><br><span class="line">System.out.printf(<span class="string">"The value is: %c \n"</span>, myChar);</span><br><span class="line">System.out.printf(<span class="string">"The myChar in number is: %d \n"</span>, myChar);</span><br><span class="line"><span class="comment">//Since myChar is a byte, it is stored in number and can be printed in number.</span></span><br><span class="line">System.out.printf(<span class="string">"The value is: %d \n"</span>, myNumber);</span><br><span class="line">System.out.printf(<span class="string">"%s\n"</span>, myString);</span><br></pre></td></tr></table></figure></li><li><p><strong>Character</strong>: To support Unicode</p></li><li><p><strong>Integer</strong>: Regular, short and long</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numberOfStars = <span class="number">10000000000000L</span>; <span class="comment">// an L is need at the end</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Real numbers</strong>: Floating and Double</p></li><li><p><strong>Boolean</strong>: True or False</p></li></ul></li><li><p><strong>Variable</strong></p><ul><li><strong><em>a place in memory to store a value of certain type that has a name</em></strong></li><li>Define a variable: Name and type</li><li>Optionally can initialize</li><li>e.g. radius, area, pi</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//data_type variable_name;</span></span><br><span class="line"><span class="keyword">int</span> value1;</span><br><span class="line"><span class="keyword">int</span> value2, sum;</span><br></pre></td></tr></table></figure><ul><li>Initializing Variables<ul><li>Declarations create variables, but do not provide a value</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//variable_name=expression</span></span><br><span class="line">value1 = <span class="number">324</span>;</span><br><span class="line"><span class="keyword">int</span> value2=<span class="number">6</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span>radius; </span><br><span class="line">        <span class="keyword">double</span> area;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> pi=<span class="number">3.142</span>;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        Scanner readInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       </span><br><span class="line">        System.out.print(<span class="string">"Enter the radius:"</span>);</span><br><span class="line">        radius = readInput.nextInt();</span><br><span class="line">        </span><br><span class="line">        area=pi*radius*radius;</span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">"The area of radius"</span> + radius + <span class="string">"is: "</span> + area);</span><br><span class="line">        System.out.printf(<span class="string">"The area of radius %d is: %5.2f \nI am done."</span>,</span><br><span class="line">                         radius, area); </span><br><span class="line">        System.out.printf(<span class="string">"The percentage of radius to area in %% is %f"</span>, pi);</span><br><span class="line">        <span class="comment">//If you want to print a "%", you need to add another "%" before it.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">short</span> numberOfStudents=<span class="number">11</span>;</span><br><span class="line">        <span class="keyword">int</span> presidentsSalary=<span class="number">400000</span>;</span><br><span class="line">        <span class="keyword">long</span> numberOfStars=<span class="number">100000</span>; <span class="comment">//initialization</span></span><br><span class="line">        Scanner readInput= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.printf(<span class="string">"Number of stars in our University: %d \n\n"</span>, numberOfStars);</span><br><span class="line">        numberOfStars=<span class="number">1000000000000L</span>; <span class="comment">//reassign the variable</span></span><br><span class="line">        <span class="comment">//without L there is error</span></span><br><span class="line">        System.out.printf(<span class="string">"Number of stars in our Milkway: %d \n\n"</span>, numberOfStars);</span><br><span class="line">        <span class="comment">//reassign the variable</span></span><br><span class="line">        System.out.printf(<span class="string">"Please enter number of students and presidents salary: \n"</span>);</span><br><span class="line">        <span class="comment">//you just need to add a space between two inputs</span></span><br><span class="line">        numberOfStudents=readInput.nextShort();</span><br><span class="line">        presidentsSalary=readInput.nextInt();</span><br><span class="line">        System.out.printf(<span class="string">"Number of students:"</span> + numberOfStudents);</span><br><span class="line">        System.out.printf(<span class="string">"President's Salary + Bonus"</span> + presidentsSalary*<span class="number">1.25</span>);</span><br><span class="line">          &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Statements-Tokens&quot;&gt;&lt;a href=&quot;#Statements-Tokens&quot; class=&quot;headerlink&quot; title=&quot;Statements: Tokens&quot;&gt;&lt;/a&gt;Statements: Tokens&lt;/h1&gt;&lt;p&gt;Tokens are the smallest element parsed by the compiler.&lt;/p&gt;
    
    </summary>
    
      <category term="Java for Dummies" scheme="https://github.com/JiamingXie/categories/Java-for-Dummies/"/>
    
    
      <category term="coding" scheme="https://github.com/JiamingXie/tags/coding/"/>
    
      <category term="Java" scheme="https://github.com/JiamingXie/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180925</title>
    <link href="https://github.com/JiamingXie/2018/09/25/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180925/"/>
    <id>https://github.com/JiamingXie/2018/09/25/股市观察日记180925/</id>
    <published>2018-09-25T15:45:12.000Z</published>
    <updated>2018-09-26T15:54:54.056Z</updated>
    
    <content type="html"><![CDATA[<p><strong>盘面分析</strong></p><p>截止收盘，沪指报2781.14点，跌0.58%，深成指报8353.38点，跌0.66%；创指报1405.81点，跌0.38%。从盘面上看，农服、物流、赛马等板块涨幅居前，机场航运、房地产开发、银行等板块跌幅居前。从技术面上看是比较正常的回调。</p><p>今日上涨的股票多为周末有利好的板块：军工、农业、国产软件、电子元件等；油服板块上涨受益于周末原油期货大涨。</p><p>后续估计下跌空间不大，但是会回踩2750位置，震荡回调或是入场时机。</p><a id="more"></a><p><strong>消息面</strong></p><ul><li><p><strong>房地产行业大地震</strong></p><p>有媒体报道，监管部门向多省下发函件，要求住建厅对商品房预售许可进行深入研究论证；有传言称广东要取消房地产预售制度。</p><p>取消预售制度无疑是“去杠杆”中的一环，此政策将会降低了房企的流动性，从而导致利润下降。</p><p>所以昨天外盘中资地产集体暴跌：融信中国下跌10.71%，绿城中国下跌6.22%，碧桂园、华润置地、融创中国下跌超过4%，内资房地产股一天蒸发市值超过600亿港元。今天A股地产也领跌，早盘保利地产、万科A、招商蛇口、新城控股等跌幅超3%。</p><p>接下来大的趋势是维稳，稳定房价，所以房价很难会再有像之前一样疯狂的上涨。虽然地产股现在处于估值低位而且业绩不错，之后的投资价值还有待考证。</p></li><li><p>（吃瓜）<strong>刘强东性侵案或有新进展</strong></p><p>媒体又爆出了刘强东性侵案的新细节，包括女生的微信求助内容，里面声称被灌醉，并想自杀，且保留了床单。目前检方正在决定是否起诉。</p><p>受此消息影响，京东再次暴跌近8%，收24.51。</p><p>京东今年以来的股价走势十分疲弱，自今年1月创下50.68美元纪录最高价以来，京东股价跌幅超过50%。京东股价在涉嫌性侵犯事件曝光后（9月之后），跌幅超过20%，市值蒸发约88亿美元(对应约602亿人民币)。</p><p>拼多多昨收26.49，与京东的市值差距进一步缩小。</p></li><li><p><strong>外资加快布局A股市场</strong></p><p>去年前10个月，仅有富达中国债券一号私募基金一只基金发行。去年11月到今年9月，外资私募发行已达18只。</p><p>据中国基金报统计，截至9月25日，已有贝莱德、富达、瑞银、富敦、英仕曼、惠理、景顺纵横、路博迈、安本、施罗德、安中、元胜、桥水、毕盛等14家外资机构先后获得私募证券投资基金管理人资格，除桥水、毕盛尚未发行产品外，其余12家发行的外资私募基金产品数量达19只产品。</p><p>今年6 月 A 股正式纳入 MSCI 新兴市场指数，9 月27日又可能纳入富时罗素国际指数体系，将进一步对外资投资A股形成吸引力。</p><p>且现在A股估值处于历史低点，或是布局的好时机。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;盘面分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;截止收盘，沪指报2781.14点，跌0.58%，深成指报8353.38点，跌0.66%；创指报1405.81点，跌0.38%。从盘面上看，农服、物流、赛马等板块涨幅居前，机场航运、房地产开发、银行等板块跌幅居前。从技术面上看是比较正常的回调。&lt;/p&gt;
&lt;p&gt;今日上涨的股票多为周末有利好的板块：军工、农业、国产软件、电子元件等；油服板块上涨受益于周末原油期货大涨。&lt;/p&gt;
&lt;p&gt;后续估计下跌空间不大，但是会回踩2750位置，震荡回调或是入场时机。&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Input/Output - Input From User, Formatted Output to the User</title>
    <link href="https://github.com/JiamingXie/2018/09/25/Input:Output%20-%20Input%20From%20User,%20Formatted%20Output%20to%20the%20User/"/>
    <id>https://github.com/JiamingXie/2018/09/25/Input:Output - Input From User, Formatted Output to the User/</id>
    <published>2018-09-24T16:18:00.000Z</published>
    <updated>2018-09-26T15:54:37.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Comments-in-Java"><a href="#Comments-in-Java" class="headerlink" title="Comments in Java"></a>Comments in Java</h1><ol><li>First lines are comments, ignored by compiler.</li><li>Needed for maintenance purposes.</li><li>Use // for single line, /<em>   </em>/ for multiline.</li><li>Over commenting is not good.</li><li>Must maintain comments as well.</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PROGRAM: FirstJavaHello.java</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Known Issues:</span></span><br><span class="line"><span class="comment">Revise:</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="Dissecting-the-program-Java-Class"><a href="#Dissecting-the-program-Java-Class" class="headerlink" title="Dissecting the program (Java Class)"></a>Dissecting the program (Java <em>Class</em>)</h1><ol><li>Every code in Java is inside a class. It has <strong>a body with {}</strong>.</li><li>The name of the class becomes the name of the application.</li><li>The file name must be the name of class.</li><li><em>javac</em> compiles the .java file and produces .class byte code.</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Dissecting-the-program-method-main"><a href="#Dissecting-the-program-method-main" class="headerlink" title="Dissecting the program(method main)"></a>Dissecting the program(method <em>main</em>)</h1><ol><li>Java program starts executing with a method called <strong>main()</strong>. It has a body within {}. It is unique.</li><li><strong>System.out</strong> is an object which knows how to display a character in a terminal.</li><li><strong>println</strong> is the message sent to the System.out object.</li></ol><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>radius=<span class="number">2</span>; <span class="comment">// create a constant called radius</span></span><br><span class="line">        <span class="keyword">double</span> area;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> pi=<span class="number">3.142</span>;</span><br><span class="line">        <span class="comment">//"final" means pi is a constant.</span></span><br><span class="line">        area=pi*radius*radius;</span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">"The area is: "</span>);<span class="comment">// The cursor will not go to the next line</span></span><br><span class="line">        System.out.println(area);<span class="comment">// The cursor will go to the next line</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>We will not change the constant after the programming is done, so we may need an place for <strong>input</strong>.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Primitive datatype</span></span><br><span class="line">        <span class="keyword">int</span>radius; <span class="comment">// a variable, can hold different value when run</span></span><br><span class="line">        <span class="keyword">double</span> area;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> pi=<span class="number">3.142</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//object</span></span><br><span class="line">        Scanner readInput = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//readInput is any name you want to give to it.</span></span><br><span class="line">        <span class="comment">//Scanner is not a java datatype. It is a user defined datatype. So if you want to use it, you need to add "new"</span></span><br><span class="line">        <span class="comment">//System.in is used to reformat what the user inputs through keyborad.</span></span><br><span class="line">        <span class="comment">//It is called reference in this case.</span></span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">"Enter the radius:"</span>);</span><br><span class="line">        radius = readInput.nextInt();<span class="comment">//use the reference and send message</span></span><br><span class="line">        <span class="comment">//by calling a method nextInt(): "give me the next</span></span><br><span class="line">        <span class="comment">//integer you have"</span></span><br><span class="line">        area=pi*radius*radius;</span><br><span class="line">        </span><br><span class="line">        System.out.print(<span class="string">"The area is: "</span>);</span><br><span class="line">        System.out.print(area);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Input-Output-in-Java"><a href="#Input-Output-in-Java" class="headerlink" title="Input/Output in Java"></a>Input/Output in Java</h1><h2 id="Input-Operation"><a href="#Input-Operation" class="headerlink" title="Input Operation"></a><strong>Input Operation</strong></h2><ul><li>Copy data from input device</li><li>Performed by usin methods in library like <strong>Scanner</strong> package</li><li>Format specifier specifics to the data type is used.</li><li>e.g. %d for integer, %f for float</li></ul><p>##<strong>Output Operation</strong></p><ul><li>Display information stored in memory to output device usually a screen.</li><li>Performed by output methods in System.out package.</li><li>Format specifier specifics to the data type is used.</li></ul><p><strong>Use Scanner, System.out packages</strong></p><h1 id="print-printf-println-methods"><a href="#print-printf-println-methods" class="headerlink" title="print, printf, println methods"></a>print, printf, println methods</h1><ul><li>Display information in std output device</li><li>Syntax:<ul><li>print(FormatControlString);</li><li>print(FormatControlString,datalist);</li></ul></li><li>FormatControlString:<ul><li>Contains characters, format specifier, and escape sequences</li></ul></li><li>Datalist:<ul><li>Contains any constants, variables, expressions, and function calls separated by commas</li></ul></li></ul><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvl39b44nuj21gy0tojwo.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> myChar=<span class="string">'A'</span>;</span><br><span class="line"><span class="keyword">byte</span> myNumber= <span class="number">65</span>;</span><br><span class="line">String myString= <span class="string">"Hello How are you"</span>;</span><br><span class="line"></span><br><span class="line">System.out.printf(<span class="string">"The value is: %c"</span>, myChar);</span><br><span class="line">System.out.printf(<span class="string">"The value is: %d"</span>, myNumber);</span><br><span class="line">System.out.printf(<span class="string">"%s\n"</span>, myString);</span><br></pre></td></tr></table></figure><p><strong>Escape sequence</strong></p><ul><li>Special meaning if used in printf() method</li><li>Causes escape from normal interpretation of format specifier string</li></ul><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvl39ux2e6j217q0dstbf.jpg" alt=""></p><p>“\r” moves cursor to the beginning of the current line and overwrite the previous characters. (Only in a DOS window you can see the effect.)</p><p><strong>Demo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.printf(<span class="string">"Java is fun."</span>);</span><br><span class="line">        System.out.printf(<span class="string">"\rHello Student"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"\nHello World\n"</span>);</span><br><span class="line">        <span class="comment">//adding "\n" at the beginning-start from the next line</span></span><br><span class="line">        System.out.printf(<span class="string">"\n"</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.printf(<span class="string">"First Name \tLast Name\tCity\n"</span>);</span><br><span class="line">        <span class="comment">//"\t" means tab</span></span><br><span class="line">        System.out.printf(<span class="string">"-----------\t----------\t---\n"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"Bill       \tClinton   \tHarlem\n"</span>);</span><br><span class="line">        </span><br><span class="line">        System.out.printf(<span class="string">"\n\n"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"Who said \"Test Scores Can Be Used ....\"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Comments-in-Java&quot;&gt;&lt;a href=&quot;#Comments-in-Java&quot; class=&quot;headerlink&quot; title=&quot;Comments in Java&quot;&gt;&lt;/a&gt;Comments in Java&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;First lines are comments, ignored by compiler.&lt;/li&gt;
&lt;li&gt;Needed for maintenance purposes.&lt;/li&gt;
&lt;li&gt;Use // for single line, /&lt;em&gt;   &lt;/em&gt;/ for multiline.&lt;/li&gt;
&lt;li&gt;Over commenting is not good.&lt;/li&gt;
&lt;li&gt;Must maintain comments as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//PROGRAM: FirstJavaHello.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;Known Issues:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;Revise:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java for Dummies" scheme="https://github.com/JiamingXie/categories/Java-for-Dummies/"/>
    
    
      <category term="coding" scheme="https://github.com/JiamingXie/tags/coding/"/>
    
      <category term="Java" scheme="https://github.com/JiamingXie/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180828</title>
    <link href="https://github.com/JiamingXie/2018/08/28/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180828/"/>
    <id>https://github.com/JiamingXie/2018/08/28/股市观察日记180828/</id>
    <published>2018-08-28T08:00:43.000Z</published>
    <updated>2018-10-03T15:05:17.601Z</updated>
    
    <content type="html"><![CDATA[<p>今天是实习的最后一天了…… </p><p>一般1点40分左右的上突，都没什么好事儿。 </p><p>相当于强上，然后就被套了，接下来的走势比较不乐观。 </p><p>没有热点板块带动，上涨无力.</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfkg8fb6j20ru0egmxo.jpg" alt=""></p><p>接下来这一波，本来应该期待的是拉一根阳线补上缺口，现在看照日内走势并不是非常乐观，可能要再缓一缓。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfkwkm0kj20wa0fqgma.jpg" alt=""></p><a id="more"></a><p><strong>看一下中线的分析：</strong></p><p>1号阴线本来是算是一个回踩但是后面又创了一个新低，说明1号阴线踩下的不是底部，2号到4号的底部比上1和3的差值已经缩小了，量能上看也大幅度缩小。 </p><p>接下来是两根中阳线，如果本周能够收复3号阳线的失地，那么这根阴线就算消化完了，否则不乐观。 </p><p>估计之后的走势会先上突补上缺口，补上缺口以后马上下来踩稳，不要低过阴线的开盘价，那么算回踩成功。 </p><p>如果补上缺口还硬向上突，量能又不够，那么久很容易哐叽，下来更惨，可能支撑位都踩不住。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfmejmexj20ql0f10tb.jpg" alt=""></p><hr><p>今天的大盘走势很有趣，下午1点40分上突的时候，预计接下来的走势不太乐观。 </p><p>但是后面下跌到0.35%左右就止跌了，这个时候走势开始分化。这个时候要分析是谁往上走了，是谁往下走了。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfms2tm9j20q809v74q.jpg" alt=""></p><p>宏观分析一下，这两天的涨势是谁带起来的，金融、止跌的白马、科技股。这几个板块这几天轮流上涨，现在有点乏力了。</p><hr><p>让我们来看一下老大哥 </p><p>之前在大盘还在跌的时候就开始上攻，让大盘有三天上涨的行情，之后开始横盘，这几天股市涨得比较多，但是铁建也没涨多少。 </p><p>下午的时候需要有股站出来，这只股就是基建股。因为基建股差不多休息好了。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfnhyywvj20qh0cqq3e.jpg" alt=""></p><p>预计明天早上会上冲破一个前高到11块，靠惯性再上突一下然后收个小阳线。（其他个股和大盘明天还会下跌。）</p><hr><p>如何看出老大哥要出马了？ </p><p>大盘下跌的时候，铁建反其道而行之向上突了一下，再结合之前的日级别走向和基建龙头的身份，这一上突就是在指明它就是铁建的大哥，后续果然强势上涨。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfnz8kekj20rn0asaap.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是实习的最后一天了…… &lt;/p&gt;
&lt;p&gt;一般1点40分左右的上突，都没什么好事儿。 &lt;/p&gt;
&lt;p&gt;相当于强上，然后就被套了，接下来的走势比较不乐观。 &lt;/p&gt;
&lt;p&gt;没有热点板块带动，上涨无力.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfkg8fb6j20ru0egmxo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;接下来这一波，本来应该期待的是拉一根阳线补上缺口，现在看照日内走势并不是非常乐观，可能要再缓一缓。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfkwkm0kj20wa0fqgma.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180823</title>
    <link href="https://github.com/JiamingXie/2018/08/23/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180823/"/>
    <id>https://github.com/JiamingXie/2018/08/23/股市观察日记180823/</id>
    <published>2018-08-23T07:55:15.000Z</published>
    <updated>2018-10-03T14:58:47.679Z</updated>
    
    <content type="html"><![CDATA[<p>市场情绪低迷，交易量持续萎缩。（昨天创下熔断后最少交易量） </p><p>天量见天价，地量见地价。这个底不知道是不是真的底，但是貌似主力是认可中长线底部的。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfh87gvoj20s009pmxo.jpg" alt=""></p><p>由于交易量过小，下午这种急速拉升是非常容易的。稍微有一点儿资金就会涨，但是不容易跌，因为深度套牢的股民很多，没有人卖。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;市场情绪低迷，交易量持续萎缩。（昨天创下熔断后最少交易量） &lt;/p&gt;
&lt;p&gt;天量见天价，地量见地价。这个底不知道是不是真的底，但是貌似主力是认可中长线底部的。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1
      
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180816</title>
    <link href="https://github.com/JiamingXie/2018/08/16/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180816/"/>
    <id>https://github.com/JiamingXie/2018/08/16/股市观察日记180816/</id>
    <published>2018-08-16T08:52:47.000Z</published>
    <updated>2018-10-03T14:54:48.838Z</updated>
    
    <content type="html"><![CDATA[<p>昨天指数跌得厉害但是交易量非常小，看得出是权重股带头砸指数。 </p><p>一般这种情况下第二天都是低开走势。这与之前有几天的走势是非常相似的。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfcz9nzmj20xl0bx0uk.jpg" alt=""></p><p>这个时候注意不可以再进货，反弹的时候反而是出货的机会。因为之后几天还会有跌势。 </p><p>今天的低开是意料之中，但是没有想到低开这么多，接下来就是看2691这个点位能否撑住，若撑不住之后的走势则不乐观。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfd5d89dj20ri0e6q3r.jpg" alt=""></p><p>早上回踩1691的地方是确认，做空期货的空方需在此平仓，因为将迎来反弹。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天指数跌得厉害但是交易量非常小，看得出是权重股带头砸指数。 &lt;/p&gt;
&lt;p&gt;一般这种情况下第二天都是低开走势。这与之前有几天的走势是非常相似的。 &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfcz
      
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180814</title>
    <link href="https://github.com/JiamingXie/2018/08/14/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180814/"/>
    <id>https://github.com/JiamingXie/2018/08/14/股市观察日记180814/</id>
    <published>2018-08-14T07:48:00.000Z</published>
    <updated>2018-10-03T14:52:22.737Z</updated>
    
    <content type="html"><![CDATA[<p>今天大盘的走势算是比较不健康的。 </p><p>早盘上突两次（而且非常急，图线非常陡峭），后面就开始一轮急跌。 </p><p>下午一直横盘，横盘时间过长，需要选择方向。两点钟之前上突一次，让下跌更容易。 </p><p>大概2点多的时候上突两次，看第三次动作，上突成功，说明基本企稳。 </p><p>不过由于之前上突了一次，之后可能还会有反复。 </p><p>本周接下来的行情很有可能会反复踩稳这个短期底部。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvfalt7ifj21320ef3zk.jpg" alt=""></p><p>今天“作”出来的这几下上突还有待消化。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天大盘的走势算是比较不健康的。 &lt;/p&gt;
&lt;p&gt;早盘上突两次（而且非常急，图线非常陡峭），后面就开始一轮急跌。 &lt;/p&gt;
&lt;p&gt;下午一直横盘，横盘时间过长，需要选择方向。两点钟之前上突一次，让下跌更容易。 &lt;/p&gt;
&lt;p&gt;大概2点多的时候上突两次，看第三次动作，上突成功，
      
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180810</title>
    <link href="https://github.com/JiamingXie/2018/08/10/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180810/"/>
    <id>https://github.com/JiamingXie/2018/08/10/股市观察日记180810/</id>
    <published>2018-08-10T08:39:40.000Z</published>
    <updated>2018-10-03T14:45:17.020Z</updated>
    
    <content type="html"><![CDATA[<p><strong>大盘</strong></p><p>看IF的线，第一下上冲，第二下上冲的尖儿太明显了，第三下说明上冲的意愿还是挺明显的，下跌空间不会太大。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvf1syn5aj21340ebt9g.jpg" alt=""></p><p>如果下去可以一跌到位，那么之后的形式会比较乐观。 </p><p>如果不到位的话走势反而不健康。 </p><a id="more"></a><p>三次上突失败，接下来就是下行两次，震荡踩实。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvf2catl5j212n0ea3zd.jpg" alt=""></p><p><strong>炒股只炒龙头股的原因</strong></p><p>带动板块上升，个股不涨了它还会涨；带动板块回调，个股不跌了它还会继续跌。上下的浮动也随之增大。 </p><p>看下图，板块涨的时候它不涨，后板块突第二下的时候意思了一下，但是DDX已经向下了，一直在出，接下来就看什么时候开始带头砸盘了。 </p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvf377axjj20rl0fdjs9.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;大盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看IF的线，第一下上冲，第二下上冲的尖儿太明显了，第三下说明上冲的意愿还是挺明显的，下跌空间不会太大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvf1syn5aj21340ebt9g.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果下去可以一跌到位，那么之后的形式会比较乐观。 &lt;/p&gt;
&lt;p&gt;如果不到位的话走势反而不健康。 &lt;/p&gt;
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>股市观察日记180806</title>
    <link href="https://github.com/JiamingXie/2018/08/06/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0180806/"/>
    <id>https://github.com/JiamingXie/2018/08/06/股市观察日记180806/</id>
    <published>2018-08-06T06:38:10.000Z</published>
    <updated>2018-10-03T14:39:26.522Z</updated>
    
    <content type="html"><![CDATA[<p>今天的大盘依然是非常惨烈。已破两年半最低点，之后可能会到三年最低点。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvewr2uakj20xp09njrx.jpg" alt=""></p><p>基建、金融股走势还算健康，还有上涨空间。</p><p><img src="http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvewwp1hej20s00ezaau.jpg" alt=""></p><p>其实这一波指数应该已经跌到位了，但是看白马股还完全没有停下来的意思。之后估计会有一段时间的杀跌和超跌。 </p><p>8月底出年报，如果收益及增长符合预期，那么可以止跌。如果收益不符合预期，那么还要继续下跌。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天的大盘依然是非常惨烈。已破两年半最低点，之后可能会到三年最低点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/6a5a25c2gy1fvvewr2uakj20xp09njrx.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;基建、金
      
    
    </summary>
    
      <category term="股市观察日记" scheme="https://github.com/JiamingXie/categories/%E8%82%A1%E5%B8%82%E8%A7%82%E5%AF%9F%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Stock Analysis" scheme="https://github.com/JiamingXie/tags/Stock-Analysis/"/>
    
      <category term="Technical Analysis" scheme="https://github.com/JiamingXie/tags/Technical-Analysis/"/>
    
  </entry>
  
</feed>
